"use strict";(self.webpackChunktinaeldevresse=self.webpackChunktinaeldevresse||[]).push([[3369],{1054:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>j,contentTitle:()=>h,default:()=>f,frontMatter:()=>m,metadata:()=>x,toc:()=>v});var n=s(4848),r=s(8453),i=s(3827),a=s(2467),l=s(695),u=s(7388),o=s(6582),c=s(8441),d=s(4259);function p(){for(var e=arguments.length,t=new Array(e),s=0;s<e;s++)t[s]=arguments[s];return t[Math.floor(Math.random()*t.length)]}const m={slug:"unit-testing",title:"Les tests unitaires",tags:["test","test unitaire","programmation"],description:'L\'article du jour est fait en effort conjoint avec mon ancien coll\xe8gue et mentor <a href="https://www.linkedin.com/in/guillaumefaas/" target="_blank" rel="noreferrer noopener nofollow">Guillaume Faas</a> sous la forme d\'une conversation entre 2 d\xe9veloppeurs. Joins-toi \xe0 moi pour le remercier pour son incroyable implication dans l\'\xe9criture de cet article! Nous esp\xe9rons tous les 2 que tu vas l\'adorer, autant que nous avons ador\xe9 l\'\xe9crire!',image:"img/unit-testing.jpg"},h=void 0,x={permalink:"/fr/blog/unit-testing",editUrl:"https://github.com/hunteroi/tinaeldevresse.eu/tree/master/blog/2022-01-01-unit-testing.mdx",source:"@site/i18n/fr/docusaurus-plugin-content-blog/2022-01-01-unit-testing.mdx",title:"Les tests unitaires",description:'L\'article du jour est fait en effort conjoint avec mon ancien coll\xe8gue et mentor <a href="https://www.linkedin.com/in/guillaumefaas/" target="_blank" rel="noreferrer noopener nofollow">Guillaume Faas</a> sous la forme d\'une conversation entre 2 d\xe9veloppeurs. Joins-toi \xe0 moi pour le remercier pour son incroyable implication dans l\'\xe9criture de cet article! Nous esp\xe9rons tous les 2 que tu vas l\'adorer, autant que nous avons ador\xe9 l\'\xe9crire!',date:"2022-01-01T00:00:00.000Z",tags:[{inline:!0,label:"test",permalink:"/fr/blog/tags/test"},{inline:!0,label:"test unitaire",permalink:"/fr/blog/tags/test-unitaire"},{inline:!0,label:"programmation",permalink:"/fr/blog/tags/programmation"}],readingTime:27.225,hasTruncateMarker:!0,authors:[],frontMatter:{slug:"unit-testing",title:"Les tests unitaires",tags:["test","test unitaire","programmation"],description:'L\'article du jour est fait en effort conjoint avec mon ancien coll\xe8gue et mentor <a href="https://www.linkedin.com/in/guillaumefaas/" target="_blank" rel="noreferrer noopener nofollow">Guillaume Faas</a> sous la forme d\'une conversation entre 2 d\xe9veloppeurs. Joins-toi \xe0 moi pour le remercier pour son incroyable implication dans l\'\xe9criture de cet article! Nous esp\xe9rons tous les 2 que tu vas l\'adorer, autant que nous avons ador\xe9 l\'\xe9crire!',image:"img/unit-testing.jpg"},unlisted:!1,prevItem:{title:"Quelle architecture j'utilise pour mes projets?",permalink:"/fr/blog/why-did-i-switch-to-clean-architecture"},nextItem:{title:"Qu'est-ce qu'un conteneur?",permalink:"/fr/blog/what-is-a-container"}},j={authorsImageUrls:[]},v=[{value:"Pr\xe9sentation",id:"presentation",level:2},{value:"Le sujet",id:"topic",level:2},{value:"Premi\xe8re rencontre",id:"first-encounter",level:3},{value:"Qu'est-ce que c'est",id:"what-is-it",level:3},{value:'O\xf9 \xe7a se situe dans la "hi\xe9rarchie des tests"',id:"hierarchy-position",level:3},{value:"But du testing unitaire",id:"objective",level:3},{value:"Avantages et inconv\xe9nients",id:"pros-and-cons",level:3},{value:"Test Coverage",id:"test-coverage",level:3},{value:"Le co\xfbt",id:"cost",level:3},{value:"Plus en d\xe9tails",id:"details",level:2},{value:"Black box &amp; white box, k\xe9sako",id:"black-and-white-boxes",level:3},{value:"Comment en \xe9crire efficacement",id:"how-to-write",level:3},{value:"Tips pour se lancer",id:"tips-to-start",level:3},{value:'Les "Bad Smells"',id:"bad-smells",level:3},{value:"Pour aller plus loin",id:"more-stuff",level:2},{value:"Librairies facilitant l'impl\xe9mentation",id:"libraries",level:3},{value:"Le Test Driven Development",id:"what-is-tdd",level:3},{value:"Le Test &amp;&amp; Commit || Revert ",id:"what-is-tcr",level:3},{value:"Conclusion",id:"conclusion",level:2}];function g(e){const t={a:"a",code:"code",em:"em",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)("a",{href:"/blog/unit-testing",children:(0,n.jsx)(i.A,{data:{src:"/img/unit-testing.jpg",alt:"Tests unitaires",type:"image"}})}),"\n",(0,n.jsxs)(t.p,{children:["L'article du jour est fait en effort conjoint avec mon ancien coll\xe8gue et mentor ",(0,n.jsx)("a",{href:"https://www.linkedin.com/in/guillaumefaas/",target:"_blank",rel:"noreferrer noopener nofollow",children:"Guillaume Faas"}),"\n(\ud83d\udd39) sous la forme d'une interview d'un d\xe9veloppeur."]}),"\n",(0,n.jsx)(t.p,{children:"Joins-toi \xe0 moi pour le remercier pour son incroyable implication dans l'\xe9criture de cet article! Nous esp\xe9rons tous les deux que tu vas l'adorer, autant que nous avons ador\xe9 l'\xe9crire."}),"\n","\n",(0,n.jsx)(a.A,{uri:"blog/unit-testing",image:"img/unit-testing.jpg",type:"article"}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(l.A,{}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.em,{children:'tldr; fais des katas en appliquant la m\xe9thodologie "Test Driven Development" !'})}),"\n",(0,n.jsx)(d.A,{id:"presentation",children:"Pr\xe9sentation"}),"\n",(0,n.jsx)(c.A,{children:"\ud83d\udd38 Salut Guillaume! Tu sais te pr\xe9senter s'il te pla\xeet?"}),"\n",(0,n.jsxs)(t.p,{children:["\ud83d\udd39 Salut Tina\xebl! Merci de m'avoir invit\xe9 \xe0 parler sur ton site. Je m'appelle Guillaume Faas et je suis un expert .NET / Software Craftsman, actuellement employ\xe9 chez ",(0,n.jsx)(t.a,{href:"https://squaremiled.com/",children:"Squaremiled S.A."}),".\nJe d\xe9veloppe des logiciels depuis une dizaine d'ann\xe9es en ayant \xe9volu\xe9 dans des environnements et secteurs d'activit\xe9s vari\xe9s."]}),"\n",(0,n.jsx)(d.A,{id:"topic",children:"Le sujet!"}),"\n",(0,n.jsx)(c.A,{children:"\ud83d\udd38 De quoi va-t-on parler aujourd'hui?"}),"\n",(0,n.jsxs)(t.p,{children:["\ud83d\udd39 \xc0 ton avis? Tu n'as pas lu le titre de l'article on dirait. On va parler de ",(0,n.jsx)(t.strong,{children:"test unitaire"}),"!"]}),"\n",(0,n.jsx)(c.A,{id:"first-encounter",children:(0,n.jsx)(t.p,{children:"\ud83d\udd38 Quand est-ce que t'y as touch\xe9 pour la premi\xe8re fois?"})}),"\n",(0,n.jsxs)(t.p,{children:["\ud83d\udd39 C'\xe9tait il y a bien longtemps, dans une galaxie lointaine... J'avais \xe0 peine quelques ann\xe9es d'exp\xe9rience \xe0 l'\xe9poque. J'\xe9tais dans la m\xeame soci\xe9t\xe9 pendant une majeure partie de ma carri\xe8re et, par rapport \xe0 mon ",(0,n.jsx)(t.em,{children:"day-to-day"}),", je pensais que j'avais d\xe9j\xe0 tout vu.\nJe commen\xe7ais \xe0 regarder en ligne \xe0 des ",(0,n.jsx)(t.em,{children:"guidelines"}),", des ",(0,n.jsx)(t.em,{children:"best practices"}),", des ",(0,n.jsx)(t.em,{children:"patterns"}),", etc. Je suis tomb\xe9 sur plein de sujets excitants et surtout nouveaux.\nC'\xe9tait comme si j'avais mis les pieds dans un nouveau monde qui n'avait rien \xe0 voir avec la routine dans laquelle j'\xe9tais ancr\xe9. Le ",(0,n.jsx)(t.em,{children:"testing"})," \xe9tait \xe9videmment l'un de ces sujets.\nCependant, j'ai vite r\xe9alis\xe9 que je devais progresser sur d'autres sujets avant d'\xeatre capable d'introduire des tests. Cela m'a pris du temps avant que je ne sois vraiment apte \xe0 travailler avec une approche ",(0,n.jsx)(t.em,{children:"test-driven"}),"."]}),"\n",(0,n.jsx)(c.A,{id:"what-is-it",children:(0,n.jsx)(t.p,{children:"\ud83d\udd38 Ok! Par contre, histoire de ne pas perdre les lecteurs... tu sais\nexpliquer ce qu'est un test unitaire s'il te pla\xeet?"})}),"\n",(0,n.jsxs)(t.p,{children:["\ud83d\udd39 Oui, bien s\xfbr! Un test unitaire, c'est un test qui v\xe9rifie un ",(0,n.jsx)(t.em,{children:"unit of code"}),". La notion de ",(0,n.jsx)(t.em,{children:"unit of code"})," varie en fonction des \xe9coles de testing.\nL'\xe9cole London (ou Mockist) va voir cela comme le plus petit ",(0,n.jsx)(t.em,{children:"chunk of code"}),", on parlera d'une classe ou d'une m\xe9thode. Par contre, l'\xe9cole Detroit (ou Classicist) va voir cela comme un ",(0,n.jsx)(t.em,{children:"behavior"}),", donc un ensemble de classes ou de m\xe9thodes.\nPour les plus curieux, voici un ",(0,n.jsx)(t.a,{href:"https://medium.com/@adrianbooth/test-driven-development-wars-detroit-vs-london-classicist-vs-mockist-9956c78ae95f",children:"article"})," qui d\xe9taille les diff\xe9rences entre les deux \xe9coles.\nJe pr\xe9cise qu'une \xe9cole n'est pas meilleure que l'autre, chacune a ses avantages et inconv\xe9nients. C'est une histoire de pr\xe9f\xe9rence et de compromis.\nLa diff\xe9rence principale tient surtout de la taille de ton ",(0,n.jsx)(t.em,{children:"System Under Test"})," (SUT) et de la relation entre les diff\xe9rents collaborateurs."]}),"\n",(0,n.jsxs)(t.p,{children:["Mais \xe0 la fin, un test unitaire est simplement ",(0,n.jsxs)(t.strong,{children:["un morceau de code qui valide qu'un autre morceau de code a le r\xe9sultat et/ou ",(0,n.jsx)(t.em,{children:"side effect"})," attendu par rapport \xe0 un sc\xe9nario donn\xe9"]}),"."]}),"\n",(0,n.jsx)(c.A,{id:"hierarchy-position",children:(0,n.jsx)(t.p,{children:'\ud83d\udd38 D\'accord, mais \xe7a se situe o\xf9 dans la "hi\xe9rachie des tests"?'})}),"\n",(0,n.jsxs)(t.p,{children:["\ud83d\udd39 Il s'agit de la pyramide de testing (",(0,n.jsx)(t.em,{children:"Agile Testing Pyramid"}),") mais de gauche \xe0 droite au lieu de bas en haut. Plus tu seras situ\xe9 vers la gauche, plus ton ",(0,n.jsx)(t.em,{children:"scope"})," est petit et plus tes tests seront nombreux et rapides. La logique inverse est appliqu\xe9e lorsque tu vas dans l'autre sens."]}),"\n",(0,n.jsxs)(t.p,{children:["Nous, on se situe sur la partie \"unit\" puisque techniquement, il n'y a pas plus petit qu'une ",(0,n.jsx)(t.em,{children:"unit"}),". Un test unitaire doit \xeatre ex\xe9cut\xe9 de fa\xe7on ",(0,n.jsx)(t.em,{children:"standalone"})," dans un environnement ",(0,n.jsx)(t.em,{children:"sandbox"}),".\nC'est-\xe0-dire qu'un test unitaire n'a aucun impact sur l'ext\xe9rieur du test, et si tu en lances plusieurs en parall\xe8le, ils ne doivent pas avoir de ",(0,n.jsx)(t.em,{children:"side effects"})," entre eux."]}),"\n",(0,n.jsx)(t.p,{children:'Cela signifie donc que dans un test unitaire: on ne contacte pas de DB, on \xe9vite de faire une requ\xeate HTTP, d\'acc\xe9der \xe0 un fichier du syst\xe8me, etc. De la m\xeame fa\xe7on, on ne va pas contacter les autres d\xe9pendances de la solution.\nOn reste vraiment "interne" \xe0 la fonction.'}),"\n",(0,n.jsx)(i.A,{data:{src:"/img/software-testing-types.png",alt:"Types de Software Testing",type:"image"}}),"\n",(0,n.jsxs)(t.p,{children:["Voici quelques points de la partie ",(0,n.jsx)(t.em,{children:"functional testing"}),":"]}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["l'",(0,n.jsx)(t.em,{children:"unit testing"}),", c'est v\xe9rifier qu'un composant fonctionne bien. Il s'agit du test le plus rapide, on parlera de ",(0,n.jsx)(t.em,{children:"fast feedback loop"})," ;"]}),"\n",(0,n.jsxs)(t.li,{children:["l'",(0,n.jsx)(t.em,{children:"integration testing"}),", c'est v\xe9rifier que plusieurs composants fonctionnent bien entre eux ;"]}),"\n",(0,n.jsxs)(t.li,{children:["le ",(0,n.jsx)(t.em,{children:"user acceptance testing"})," qui consiste \xe0 v\xe9rifier l'enti\xe8ret\xe9 de l'application tout en \xe9vitant de contacter les d\xe9pendances externes (ex: des requ\xeates vers des fournisseurs de donn\xe9es ext\xe9rieurs \xe0 ton application).\nIl s'agit du test le plus repr\xe9sentatif, probablement celui qui a le plus de valeur \xe0 l'\xe9chelle du produit car il v\xe9rifie des ",(0,n.jsx)(t.em,{children:"business requirements"}),"."]}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:["\xc0 noter qu'il n'y a pas d'obligation de tous les impl\xe9menter. On pourrait tr\xe8s bien avoir une ",(0,n.jsx)(t.em,{children:"test suite"})," compos\xe9e uniquement de tests d'une seule de ces cat\xe9gories. Mais il convient de garder \xe0 l'esprit que notre ",(0,n.jsx)(t.em,{children:"test suite"})," ne sera pas des plus efficaces."]}),"\n",(0,n.jsx)(c.A,{children:(0,n.jsx)(t.p,{children:"\ud83d\udd38 D'accord! Mais pourquoi le testing, c'est pas r\xe9alis\xe9 dans le monde\nprofessionnel?"})}),"\n",(0,n.jsxs)(t.p,{children:["\ud83d\udd39 En r\xe9alit\xe9, une grande partie des d\xe9veloppeurs n'\xe9crivent pas ou peu de tests. De plus, les tests d'int\xe9grations sont moins r\xe9pandus que les tests unitaires car ils sont plus complexes \xe0 \xe9crire. Au final, cette t\xe2che est souvent vue comme une corv\xe9e ou alors une ",(0,n.jsx)(t.em,{children:"extra step"})," que l'on fera uniquement si on a le temps."]}),"\n",(0,n.jsx)(i.A,{data:{src:p("/img/integration-tests.gif","/img/more-unit-tests-no-integration-tests.gif","/img/unit_vs_integration_tests.gif"),alt:"GIF sur les tests d'int\xe9gration",type:"image"}}),"\n",(0,n.jsx)(t.p,{children:"Uncle Bob en a \xe9galement parl\xe9 \xe0 une conf\xe9rence \xe0 Londre en 2018:"}),"\n",(0,n.jsx)(i.A,{data:{type:"html",width:"560",height:"315",src:"https://www.youtube.com/embed/17vTLSkXTOo?start=552&end=720",title:"YouTube video player of SC London Conference 2018",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowFullScreen:!0}}),"\n",(0,n.jsx)(c.A,{id:"objective",children:(0,n.jsx)(t.p,{children:"\ud83d\udd38 C'est quoi le but du testing unitaire et quand est-ce que \xe7a devrait \xeatre\nappliqu\xe9?"})}),"\n",(0,n.jsxs)(t.p,{children:["\ud83d\udd39 Le but est assez simple: c'est de montrer qu'une m\xe9thode fonctionne comme tu l'attends. C'est-\xe0-dire que tu vas avoir un comportement attendu, par exemple ta m\xe9thode ",(0,n.jsx)(t.code,{children:"getSomething"})," doit te retourner quelque chose. Tu vas donc tester diff\xe9rents sc\xe9narios et v\xe9rifier qu'elle se comporte toujours de la bonne fa\xe7on."]}),"\n",(0,n.jsx)(t.p,{children:'Pour ce qui est du "quand", c\'est encore plus simple: \xe7a doit \xeatre appliqu\xe9 \xe0 partir du moment o\xf9 tu as de la logique quelque part.'}),"\n",(0,n.jsx)(c.A,{id:"pros-and-cons",children:(0,n.jsx)(t.p,{children:"\ud83d\udd38 Bah du coup, quels en sont les avantages et inconv\xe9nients de la mise en\nplace de tests unitaires?"})}),"\n",(0,n.jsx)(t.p,{children:"\ud83d\udd39 Comme dit pr\xe9c\xe9demment, tu \xe9cris du code qui teste du code. Vu comme cela, on dirait surtout une charge de travail suppl\xe9mentaire sauf qu'il existe de r\xe9els int\xe9r\xeats derri\xe8re."}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsxs)(t.li,{children:["Le test unitaire sert de ",(0,n.jsx)(t.strong,{children:"filet de s\xe9curit\xe9 contre les r\xe9gressions"}),"."]}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:["L'\xe9tape du refactoring intervient syst\xe9matiquement dans un projet. Le probl\xe8me \xe9tant qu'\xe0 partir du moment o\xf9 l'on modifie quelque chose, il y a un risque de ",(0,n.jsx)(t.strong,{children:"r\xe9gression"}),". On parle de r\xe9gression lorsque quelque chose fonctionnait auparavant et ne fonctionne plus suite \xe0 un changement.\nC'est pr\xe9cisement ici que le test intervient: il permet de garantir que tes composants fonctionnent toujours comme attendu. Si jamais quelque chose ne fonctionne plus suite \xe0 un changement, la ",(0,n.jsx)(t.em,{children:"test suite"})," t'affichera les tests qui ont d\xe9tect\xe9 un probl\xe8me avec un beau rond rouge. Et \xe7a, du point de vue d'un d\xe9veloppeur, c'est \xe9norme! Cela veut dire que tu es beaucoup plus serein et que tu passes bien moins de temps \xe0 v\xe9rifier que tes changements n'ont pas eu d'effets ind\xe9sirables sur le reste des fonctionnalit\xe9s."]}),"\n",(0,n.jsxs)(t.ol,{start:"2",children:["\n",(0,n.jsxs)(t.li,{children:["L'\xe9criture de tests am\xe9liore la ",(0,n.jsx)(t.strong,{children:"qualit\xe9 du code"})," de ton application."]}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:["C'est li\xe9 \xe0 ce dont on vient d'aborder. Il est probable que les lecteurs aient d\xe9j\xe0 rencontr\xe9 une situation similaire: lorsque l'on parle de refactoring \xe0 un ",(0,n.jsx)(t.em,{children:"Product Owner"})," ou ",(0,n.jsx)(t.em,{children:"Product Manager"}),", la premi\xe8re crainte est toujours que quelque chose ne fonctionne plus.\nSi tu es couvert par une ",(0,n.jsx)(t.em,{children:"test suite"}),", tu n'as pas peur du refactoring. C'est m\xeame l'inverse, tu es ",(0,n.jsx)(t.strong,{children:"encourag\xe9 \xe0 faire du refactoring r\xe9guli\xe8rement"})," tout en \xe9tant prot\xe9g\xe9."]}),"\n",(0,n.jsxs)(t.ol,{start:"3",children:["\n",(0,n.jsxs)(t.li,{children:["Une suite de tests devient ce qu'on appelle une ",(0,n.jsx)(t.strong,{children:"living documentation"}),"."]}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:["Lorsque l'on parle de documentation, on a tous \xe0 l'esprit des commentaires. Le probl\xe8me est qu'ils ne sont jamais \xe0 jour avec le reste du code. Le code \xe9volue, la documentation non. Par contre, ton test unitaire sera toujours ",(0,n.jsx)(t.em,{children:"up-to-date"}),". Si ce n'est pas le cas, alors ta suite de tests ne te donnera pas le feu vert pour aller plus loin."]}),"\n",(0,n.jsxs)(t.p,{children:["C'est d'autant plus int\xe9ressant dans le cadre d'une arriv\xe9e d'un nouveau d\xe9veloppeur sur le projet. Plut\xf4t que de lire tout le code d'une m\xe9thode pour savoir ce qu'elle fait, il lui suffit de regarder les diff\xe9rents tests de cette m\xe9thode. Chaque comportement sera repr\xe9sent\xe9 par un test avec un ",(0,n.jsx)(t.em,{children:"naming"})," explicite sur le sc\xe9nario et r\xe9sultat attendu (ex: ",(0,n.jsx)(t.code,{children:"GetItem_ShouldReturnNotFoundResult_GivenItemIsMissing"}),"). ",(0,n.jsxs)(t.strong,{children:["\xc7a facilite donc l'",(0,n.jsx)(t.em,{children:"onboarding"}),"!"]})]}),"\n",(0,n.jsxs)(t.ol,{start:"4",children:["\n",(0,n.jsxs)(t.li,{children:["Cela ",(0,n.jsx)(t.strong,{children:"r\xe9duit le temps de d\xe9tection des bugs"}),"."]}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:["On a \xe9voqu\xe9 le terme ",(0,n.jsx)(t.em,{children:"short feedback loop"})," un peu plus t\xf4t dans la discussion. Les tests unitaires sont tr\xe8s rapides \xe0 ex\xe9cuter, ils nous donnent un ",(0,n.jsx)(t.em,{children:"feedback"})," presque instantan\xe9 sur la sant\xe9 de la solution. Cela veut dire que l'on doit les ex\xe9cuter r\xe9guli\xe8rement. Je sch\xe9matise mais on a un bouton (ou un raccourci) qui nous donne un statut Vert/Rouge en quelques secondes. Actionner ce bouton doit devenir quelque chose de syst\xe9matique.\nCela a d\xe9j\xe0 un int\xe9r\xeat pour nous en tant que d\xe9veloppeurs mais ce n'est pas tout. On en parlera un peu plus tard!"]}),"\n",(0,n.jsxs)(t.ol,{start:"5",children:["\n",(0,n.jsxs)(t.li,{children:["Ce n'est pas un avantage direct mais plut\xf4t un effet secondaire: ",(0,n.jsx)(t.strong,{children:"faire du testing te rend meilleur"}),"."]}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:["Pour faire en sorte que tu puisses \xe9crire des tests apportant une r\xe9elle valeur, tu dois respecter certains principes. Tu dois toujours avoir une certaine couche d'abstraction pour ",(0,n.jsx)(t.em,{children:"mocker"})," tes d\xe9pendances, tu dois pouvoir les injecter, tu dois limiter les responsabilit\xe9s de tes composants, etc... en fait tu vas te forcer \xe0 appliquer plusieurs principes r\xe9guli\xe8rement (SOLID par exemple).\nDu coup, cela te force \xe0 casser tes composants, \xe0 les d\xe9coupler, \xe0 penser \xe0 leurs interations et responsabilit\xe9s. Bref, \xe0 r\xe9fl\xe9chir et \xe0 te poser beaucoup de questions. Mine de rien, on parle de ",(0,n.jsx)(t.em,{children:"code design"}),"! Et donc, action-r\xe9action: tu deviens meilleur au fil du temps. Cela fait tr\xe8s ",(0,n.jsx)(t.em,{children:"Happy End"})," mais tu vois o\xf9 je veux en venir."]}),"\n",(0,n.jsx)(t.p,{children:"\ud83d\udd38 Et comme c'est peu mis en place dans les entreprises, c'est vu comme \"nouveau\" et \xe7a motive \xe0 en apprendre plus!"}),"\n",(0,n.jsx)(t.p,{children:"\ud83d\udd39 Je te rejoins sur l'aspect nouveaut\xe9 mais il reste surtout pr\xe9sent au d\xe9but lorsqu'on d\xe9couvre le sujet. Mais il y a une partie d'interpr\xe9tation dans tout cela: certains (comme toi) le voient comme quelque chose d'int\xe9ressant, d'autres le voient comme une corv\xe9e ou une pression suppl\xe9mentaire. Tu trouveras toujours des personnes r\xe9fractaires aux tests pour des raisons diverses et vari\xe9es. Peut-\xeatre qu'on aura l'occasion d'aborder les raisons qui sont g\xe9n\xe9ralement \xe9voqu\xe9es."}),"\n",(0,n.jsx)(t.p,{children:"Pour revenir \xe0 ta question, voici les inconv\xe9nients qui me viennent \xe0 l'esprit:"}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsxs)(t.li,{children:["On l'a mentionn\xe9, il y a des pr\xe9-requis: il faut comprendre les piliers de l'orient\xe9 objet, l'injection de d\xe9pendances, les principes ",(0,n.jsx)(t.a,{href:"https://www.digitalocean.com/community/conceptual_articles/s-o-l-i-d-the-first-five-principles-of-object-oriented-design",children:"SOLID"}),", etc."]}),"\n",(0,n.jsxs)(t.li,{children:["Le fait que l'on trouve peu de projets avec de r\xe9elles ",(0,n.jsx)(t.em,{children:"test suites"})," rend l'apprentissage moins accessible. Il en va de m\xeame pour trouver un coach passionn\xe9 par ce sujet."]}),"\n",(0,n.jsx)(t.li,{children:"Il y a une courbe d'apprentissage/de progression assez importante. Tout le monde passe par une phase de frustration au d\xe9but parce que l'on est pas \xe0 l'aise et on a l'impression d'\xeatre plus lent. Il faut r\xe9sister et pers\xe9v\xe9rer car les tests nous feront en r\xe9alit\xe9 aller plus vite. On en parlera avec l'approche TDD."}),"\n",(0,n.jsx)(t.li,{children:"Cela demande de la pr\xe9paration : il faut r\xe9fl\xe9chir \xe0 l'architecture du projet, aux relations entre les diff\xe9rents composants, etc... Vu comme cela, ce n'est pas vraiment un inconv\xe9nient mais on ne peut pas (plus?) se lancer t\xeate baiss\xe9e dans un d\xe9veloppement sans un minimum de r\xe9flexion."}),"\n",(0,n.jsxs)(t.li,{children:["Il y a un manque de compr\xe9hension du c\xf4t\xe9 des autres \xe9quipes intervenant sur le d\xe9veloppement du produit, notamment non-IT. On retombe toujours sur des discussions sur le ",(0,n.jsx)(t.em,{children:"Return On Investement"})," (ROI) ou l'impact sur la v\xe9locit\xe9."]}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"On entend souvent dire que \"cela prend du temps et que cela sera planifi\xe9 plus tard\" ou que \"les d\xe9veloppeurs n'ont pas le temps\" mais ces arguments ne sont pas vraiment valables.\nEn effet, le premier indique clairement un manque de vision et de compr\xe9hension du testing. D\xe9j\xe0 parce que \"plus tard\" n'arrive jamais. Mais surtout, faire les tests \xe0 la fin du d\xe9veloppement n'a aucun sens. On perd tous les avantages qu'apporte le testing. Je l'ai d\xe9j\xe0 dit mais on en parlera avec l'approche TDD.\nEnsuite, le second indique un probl\xe8me d'organisation. Les tests devraient \xeatre inclus dans les estimations et pas comme un travail suppl\xe9mentaire \xe0 r\xe9aliser."}),"\n",(0,n.jsx)(c.A,{id:"test-coverage",children:(0,n.jsxs)(t.p,{children:["\ud83d\udd38 Et le ",(0,n.jsx)("span",{style:{fontStyle:"italic"},children:"test coverage"}),", dans\ntout \xe7a?"]})}),"\n",(0,n.jsxs)(t.p,{children:["\ud83d\udd39 Tester, c'est super et on ressent les b\xe9n\xe9fices. Cependant, il faut aussi faire un statut sur l'\xe9tat de la ",(0,n.jsx)(t.em,{children:"test suite"}),". C'est l\xe0 qu'on arrive sur le ",(0,n.jsx)(t.em,{children:"code coverage"}),". C'est une m\xe9trique informative sur la progression de couverture de tests de ton application.\nJ'insiste vraiment sur le c\xf4t\xe9 ",(0,n.jsx)(t.strong,{children:"informatif"}),". Ce serait une erreur de mesurer la qualit\xe9 de la suite de tests sur base de sa couverture. C'est une m\xe9trique de quantit\xe9 et non de qualit\xe9.\nJ'ai d\xe9j\xe0 lu des articles sur des soci\xe9t\xe9s qui ont int\xe9gr\xe9 la valeur de ",(0,n.jsx)(t.em,{children:"code coverage"})," dans les objectifs des d\xe9veloppeurs et cela a incit\xe9 les d\xe9veloppeurs \xe0 utiliser de faux tests pour faire gonfler le coverage."]}),"\n",(0,n.jsxs)(t.p,{children:["Le seul moyen de v\xe9rifier la qualit\xe9 d'une ",(0,n.jsx)(t.em,{children:"test suite"})," d'un projet, c'est de se poser quelques questions:"]}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"Est-ce que le temps de d\xe9veloppement g\xe9n\xe9ral des fonctionnalit\xe9s reste approximativement le m\xeame avec le temps?"}),"\n",(0,n.jsx)(t.li,{children:"Est-ce que la quantit\xe9 de bugs trouv\xe9s en production diminue avec le temps?"}),"\n",(0,n.jsx)(t.li,{children:"Est-ce que tu arrives \xe0 facilement accueillir une nouvelle ressource au sein de l'\xe9quipe de d\xe9veloppement?"}),"\n",(0,n.jsxs)(t.li,{children:["Est-ce que les d\xe9veloppeurs ont confiance en leur ",(0,n.jsx)(t.em,{children:"test suite"}),"? Est-ce qu'elle est repr\xe9sentative de l'\xe9tat de sant\xe9 de la solution? Est-ce qu'un rond vert garantit vraiment qu'un composant fonctionne?"]}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:['Si tu es en mesure de r\xe9pondre "oui" \xe0 toutes ces questions, f\xe9licitations! Tu peux \xeatre fier de la ',(0,n.jsx)(t.em,{children:"test suite"})," que tu as mis en place.\nLe souci? C'est difficile d'avoir une r\xe9ponse \xe0 ces questions alors que tu dois rendre des comptes ",(0,n.jsx)(t.em,{children:"day one"}),"... Tu remarques d'ailleurs que les trois premi\xe8res font r\xe9f\xe9rence au ",(0,n.jsx)(t.strong,{children:"temps"}),"."]}),"\n",(0,n.jsx)(c.A,{id:"cost",children:(0,n.jsx)(t.p,{children:"\ud83d\udd38 Bon sinon... question co\xfbt, qu'est-ce qu'il en est? Parce que finalement,\n\xe9crire un test unitaire, c'est tout de m\xeame \xe9crire du code. \xc7a co\xfbte!"})}),"\n",(0,n.jsxs)(t.p,{children:["\ud83d\udd39 Je vois l\xe0 o\xf9 tu veux en venir. Non, cela ne co\xfbte pas plus sauf si tu factures au caract\xe8re!\nM\xeame si tu \xe9cris plus de code, tu es vraiment gagnant et pas que sur l'aspect temps. Je t'ai dit qu'on devait parler de TDD? Parce que cela te fait m\xeame gagner du temps \xe0 court-terme. Bref.\nD\xe9velopper une fonctionnalit\xe9 peut te prendre un peu plus de temps en sachant que cela d\xe9pendra surtout de ton aisance avec l'\xe9criture de tests. D'un autre c\xf4t\xe9, cela va surtout te \"sauver la vie\" pas mal de fois parce que tu vas \xe9viter \xe9normement de bugs qui, en temps normal,\nseraient arriv\xe9s bien plus tard dans ton ",(0,n.jsx)(t.em,{children:"process"}),", lors des tests utilisateur sur un environnement de QA ou en production.\nToi qui voulais parler d'argent, ",(0,n.jsx)(t.strong,{children:"plus un bug est d\xe9couvert tard, plus il co\xfbte cher"}),":"]}),"\n",(0,n.jsx)(i.A,{data:{src:"/img/relative-costs-bugs-fixing.png",alt:"Co\xfbt de correction des bugs",type:"image",url:"https://deepsource.io/blog/exponential-cost-of-fixing-bugs/"},children:(0,n.jsxs)(t.p,{children:["Le co\xfbt de correction d'un bug sur base du moment o\xf9 il a \xe9t\xe9 d\xe9tect\xe9, sourc\xe9 chez ",(0,n.jsx)("a",{href:"https://deepsource.io/blog/exponential-cost-of-fixing-bugs/",children:"DeepSource"}),"!"]})}),"\n",(0,n.jsx)(t.p,{children:"Et c'est tout \xe0 fait normal."}),"\n",(0,n.jsxs)(t.p,{children:["On peut reparler de la ",(0,n.jsx)(t.em,{children:"fast feedback loop"}),": si un bug est d\xe9couvert par un test unitaire, c'est en local sur ta machine, juste apr\xe8s le changement (n'oublie pas de ",(0,n.jsx)(t.em,{children:"rebuild"})," et de ",(0,n.jsx)(t.em,{children:"rerun"})," ta suite de tests). Il est identifi\xe9 rapidement et corrig\xe9 rapidement.\n\xc0 contrario, un bug qui passe en production... il est d\xe9couvert par un utilisateur qui remonte le probl\xe8me \xe0 ta ",(0,n.jsx)(t.em,{children:"product team"})," qui elle doit analyser le ",(0,n.jsx)(t.em,{children:"feedback"})," et ouvrir un ticket dans ton ",(0,n.jsx)(t.em,{children:"backlog"}),". Ce ticket, il va \xeatre prioris\xe9 par ton ",(0,n.jsx)(t.em,{children:"Product Owner"})," pour \xeatre inclus dans la prochaine it\xe9ration puis il sera assign\xe9 \xe0 un d\xe9veloppeur. En admettant que ce ne soit pas toi, il y aura une phase d'investigation (reproduction du bug), une phase de correction de bug et apr\xe8s il doit repartir sur tous les environnements et \xeatre valid\xe9 par des ",(0,n.jsx)(t.em,{children:"Quality Assurance Users"}),"."]}),"\n",(0,n.jsx)(t.p,{children:"J'ai volontairement pris un cas extr\xeame pour montrer le pire sc\xe9nario mais c'est aussi la fa\xe7on d'\xeatre le plus explicite sur le probl\xe8me.\nCe qu'il est important de retenir, c'est qu'un test peut faire gagner beaucoup de temps \xe0 beaucoup de personnes, aussi simple soit-il."}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsxs)(t.em,{children:["ndlr: pour en savoir plus sur les raisons qui font qu'un logiciel a des bugs, n'h\xe9sitez pas \xe0 consulter ",(0,n.jsx)(t.a,{href:"https://www.softwaretestinghelp.com/why-does-software-have-bugs",children:"cette page"})," et ",(0,n.jsx)(t.a,{href:"https://www.google.com/search?q=why+do+softwares+have+bugs",children:"d'autres sur le web"}),"!"]})}),"\n",(0,n.jsx)(d.A,{id:"details",children:"En d\xe9tails"}),"\n",(0,n.jsx)(c.A,{id:"black-and-white-boxes",children:(0,n.jsxs)(t.p,{children:["\ud83d\udd38 Ok! Et si on parlait maintenant de"," ","\n",(0,n.jsx)("span",{style:{fontStyle:"italic"},children:"black box"})," et"," ","\n",(0,n.jsx)("span",{style:{fontStyle:"italic"},children:"white box testing"}),"?"]})}),"\n",(0,n.jsx)(t.p,{children:"\ud83d\udd39 J'aime les sch\xe9mas, tu aimes les sch\xe9mas? C'est bien les sch\xe9mas!"}),"\n",(0,n.jsx)(i.A,{data:{src:"/img/black-white-box-testing.png",alt:"Black and white box testing",type:"image",style:{border:".5em solid black"}},children:(0,n.jsxs)(t.p,{children:["Les diff\xe9rences entre ",(0,n.jsx)("span",{style:{fontStyle:"italic"},children:"black box"})," ","\net ",(0,n.jsx)("span",{style:{fontStyle:"italic"},children:"white box testing"})]})}),"\n",(0,n.jsxs)(t.p,{children:["Le ",(0,n.jsx)(t.strong,{children:"black box testing"}),", c'est donner une information d'entr\xe9e au SUT et v\xe9rifier l'information de sortie. C'est aussi simple que \xe7a: on ne prend pas en compte ce qu'il se passe \xe0 l'int\xe9rieur de la m\xe9thode.\nIl y a un cas pr\xe9cis o\xf9 ce type de testing sera obligatoire: les m\xe9thodes pures. Ces m\xe9thodes n'ayant aucune d\xe9pendance ou variables partag\xe9es, elles n'ont donc aucun ",(0,n.jsx)(t.em,{children:"side effect"}),". Le ",(0,n.jsx)(t.strong,{children:"black box testing"})," est donc une \xe9vidence mais cela rend aussi le test extr\xeamement robuste car rien ne vient impacter le r\xe9sultat du test."]}),"\n",(0,n.jsxs)(t.p,{children:["Prenons par exemple une m\xe9thode ",(0,n.jsx)(t.code,{children:"Sum"})," d'une classe ",(0,n.jsx)(t.code,{children:"Calculator"}),". On est exactement sur le sc\xe9nario mentionn\xe9 plus haut:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-csharp",metastring:"title='tests/CalculatorTests.cs'",children:"[TestClass]\npublic class CalculatorTests\n{\n\t[TestMethod]\n\tpublic int Sum_Should_ReturnTheSumOfTheTwoNumbers()\n\t{\n\t\tCalculator calculator = new();\n\n\t\tint result = calculator.Sum(2,3);\n\n\t\tAssert.AreEqual(expected: 5, actual: result);\n\t}\n}\n"})}),"\n",(0,n.jsxs)(t.p,{children:["On ne conna\xeet pas l'impl\xe9mentation de la m\xe9thode, mais on a \xe9crit un test. On lui donne des valeurs en entr\xe9e, et on v\xe9rifie la valeur de sortie.\nPour le reste des sc\xe9narios, je trouve dommage de s'arr\xeater l\xe0. C'est une pr\xe9f\xe9rence personnelle, je trouve le ",(0,n.jsx)(t.strong,{children:"white box testing"})," plus pertinent en tant que ",(0,n.jsx)(t.em,{children:"Mockist"}),"."]}),"\n",(0,n.jsxs)(t.p,{children:["De l'autre c\xf4t\xe9, on a donc ce ",(0,n.jsx)(t.strong,{children:"white box testing"}),". \xc0 premi\xe8re vue, c'est la m\xeame chose: on donne un ",(0,n.jsx)(t.em,{children:"input"})," et on v\xe9rifie l'",(0,n.jsx)(t.em,{children:"output"}),". Mais on va aussi v\xe9rifier ce qu'il se passe \xe0 l'int\xe9rieur du SUT.\nOn peut donc v\xe9rifier que le SUT a bien fait appel \xe0 sa d\xe9pendance, que la valeur a bien \xe9t\xe9 mise dans un cache, sauvegard\xe9e dans un repo, qu'un event a bien \xe9t\xe9 \xe9mis, etc.\nCela nous permet de v\xe9rifier chaque ",(0,n.jsx)(t.em,{children:"behavior"})," avec ses ",(0,n.jsx)(t.em,{children:"side effects"}),"."]}),"\n",(0,n.jsx)(c.A,{id:"how-to-write",children:(0,n.jsx)(t.p,{children:"\ud83d\udd38 La question que tous se posent... Comment \xe9crire de bons tests unitaires?"})}),"\n",(0,n.jsxs)(t.p,{children:["\ud83d\udd39 Je ne pense pas qu'il y ait de bons ou de mauvais tests unitaires... Evidemment que si!\nIl faut r\xe9fl\xe9chir avant sur ce que tu veux faire. \xc7a peut para\xeetre b\xeate dit comme \xe7a mais ",(0,n.jsx)(t.em,{children:"think before you do"}),". C'est que j'expliquais lorsque je parlais du fait que faire des tests te rend meilleur.\nSi tu veux faire des tests efficaces, il faut r\xe9fl\xe9chir sur la fa\xe7on dont tes composants vont communiquer entre eux. En fait, tes tests seront efficaces \xe0 partir du moment o\xf9 ils seront faciles \xe0 faire. Et si tu te rends compte qu'ils ne le sont pas, c'est qu'il y a un soucis dans ton code."]}),"\n",(0,n.jsxs)(t.p,{children:["Exemple: j'ai un ",(0,n.jsx)(t.em,{children:"service"})," qui doit cr\xe9er un utilisateur. ",(0,n.jsx)(t.strong,{children:"Avant d'\xe9crire mon test"}),", je dois me poser quelques questions: quelles sont les responsabilit\xe9s de mon service?\nEst-il responsable d'envoyer une requ\xeate HTTP \xe0 un fournisseur externe pour r\xe9cup\xe9rer des informations? Est-il responsable de la persistence en base de donn\xe9es? Est-il responsable du ",(0,n.jsx)(t.em,{children:"logging"}),"?\n",(0,n.jsx)(t.em,{children:"Divide & Conquer"}),": une d\xe9pendance ici, une l\xe0, et une autre l\xe0... Au final, que reste-t-il dans mon service? L'orchestration d'un processus d\xe9l\xe9gu\xe9 \xe0 diff\xe9rentes d\xe9pendances (ex: client http, repository, logger, etc) et \xe9ventuellement une modification de l'\xe9tat d'une entit\xe9. C'est tout."]}),"\n",(0,n.jsx)(t.p,{children:'Au final, un "bon" test doit:'}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"te prot\xe9ger contre les r\xe9gressions ;"}),"\n",(0,n.jsx)(t.li,{children:"\xeatre r\xe9sistant au refactoring ;"}),"\n",(0,n.jsx)(t.li,{children:"te donner un feedback rapide ;"}),"\n",(0,n.jsx)(t.li,{children:"\xeatre maintenable."}),"\n"]}),"\n",(0,n.jsx)(c.A,{id:"tips-to-start",children:(0,n.jsx)(t.p,{children:"\ud83d\udd38 Et, sinon... T'as des conseils pour se lancer dans le testing unitaire?"})}),"\n",(0,n.jsxs)(t.p,{children:["\ud83d\udd39 Je recommande aux personnes qui veulent d\xe9marrer le testing de commencer directement avec le ",(0,n.jsx)(t.em,{children:"Test Driven Development"}),".\nSi le test est \xe9crit apr\xe8s l'impl\xe9mentation, c'est pas vraiment objectif car tu connais d\xe9j\xe0 l'impl\xe9mentation donc ton test est fortement li\xe9 \xe0 ton impl\xe9mentation. De plus, le code fonctionne d\xe9j\xe0 donc le test sera per\xe7u comme une perte de temps. Mais surtout: on a b\xe9n\xe9fici\xe9 d'aucun avantage du testing lors de la phase d'impl\xe9mentation."]}),"\n",(0,n.jsx)(t.p,{children:"Pour cela, vous n'\xeates pas seul. Il existe des tonnes de resources disponibles pour vous aider.\nVoici plusieurs livres que j'aurais aim\xe9 avoir lus au d\xe9but de ma carri\xe8re:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:'"Test Driven Development - By Example" par Kent Beck.'}),"\n",(0,n.jsx)(t.li,{children:'"Unit Testing - Principles, Practices and Patterns" par Vladimir Khorikov.'}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:["\xc9galement, voici un site rempli de conseils et astuces sur TDD avec un grand nombre de katas pour progresser: ",(0,n.jsx)(t.a,{href:"http://www.tddbuddy.com/",children:"TDD Buddy"}),"."]}),"\n",(0,n.jsxs)(t.p,{children:["En parlant de katas, faites des katas. Faites pleins de katas et faites en \xe0 plusieurs (",(0,n.jsx)(t.em,{children:"pair"})," et/ou ",(0,n.jsx)(t.em,{children:"mob programming"}),") si vous en avez la possibilit\xe9. C'est fun et c'est tr\xe8s formatteur, notamment sur le fait de d\xe9marrer avec des exercices simples et progressivement augmenter la difficult\xe9 jusqu'\xe0 se retrouver avec des situations similaires \xe0 ce que l'on peut trouver dans des projets r\xe9els. En plus de ",(0,n.jsx)(t.a,{href:"http://www.tddbuddy.com/",children:"TDD Buddy"}),", je pourrais recommander ",(0,n.jsx)(t.a,{href:"https://www.codewars.com/",children:"Code Wars"})," si vous \xeates en manque d'inspiration.\nSans forc\xe9ment faire de l'auto-promotion, vous pouvez aussi trouver quelques katas sur mon ",(0,n.jsx)(t.a,{href:"https://github.com/Tr00d/",children:"GitHub"}),"."]}),"\n",(0,n.jsxs)(t.p,{children:["Un dernier conseil pour d\xe9marrer le testing, on peut se r\xe9f\xe9rer \xe0 ce qu'on appelle le triple A (AAA), qui signifie ",(0,n.jsx)(t.em,{children:"Arrange, Act, Assert"}),", pour rendre les tests plus clairs et organis\xe9s. Le but est de diviser son test unitaire en 3 parties distinctes:"]}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.em,{children:"arrange"})," : c'est le sc\xe9nario, la partie o\xf9 tu pr\xe9pares les donn\xe9es ",(0,n.jsx)(t.em,{children:"input"})," de ta m\xe9thode ;"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.em,{children:"act"})," : c'est l'action, le fait de r\xe9aliser l'appel \xe0 la m\xe9thode que tu vas tester ;"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.em,{children:"assert"})," : c'est la v\xe9rification du ",(0,n.jsx)(t.em,{children:"behavior"}),", l\xe0 partie o\xf9 tu v\xe9rifies l'",(0,n.jsx)(t.em,{children:"output"})," ou les ",(0,n.jsx)(t.em,{children:"side effects"}),"."]}),"\n"]}),"\n",(0,n.jsx)(c.A,{id:"bad-smells",children:(0,n.jsx)(t.p,{children:'\ud83d\udd38 Quels sont les "bad smells" dans l\'unit testing?'})}),"\n",(0,n.jsx)(t.p,{children:"\ud83d\udd39 J'en vois quelques-uns..."}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["une partie ",(0,n.jsx)(t.em,{children:"arrange"})," qui fait 15 lignes... C'est trop compliqu\xe9. On voit clairement que la m\xe9thode test\xe9e fait trop de choses car le sc\xe9nario est trop compliqu\xe9 \xe0 mettre en place!"]}),"\n",(0,n.jsxs)(t.li,{children:["On dit qu'",(0,n.jsx)(t.strong,{children:"un test ne doit avoir qu'une et une seule raison d'\xe9chouer"}),". Un test ne devrait contenir qu'un seul ",(0,n.jsx)(t.em,{children:"assert"}),"."]}),"\n",(0,n.jsx)(t.li,{children:"Le fait que tu aies du mal \xe0 \xe9crire des tests unitaires, non pas \xe0 cause du fait que tu n'aies pas la connaissance n\xe9cessaire mais plut\xf4t en rapport au code \xe0 tester... c'est qu'il y a un soucis au niveau de ton composant. Alors, prends du recul et penses aux responsabilit\xe9s."}),"\n"]}),"\n",(0,n.jsx)(d.A,{id:"more-stuff",children:"Pour aller plus loin"}),"\n",(0,n.jsx)(c.A,{id:"libraries",children:(0,n.jsx)(t.p,{children:"\ud83d\udd38 Tu as des librairies int\xe9ressantes en t\xeate pour faciliter le travail?"})}),"\n",(0,n.jsx)(t.p,{children:"\ud83d\udd39 Oui. Pour moi, on peut consid\xe9rer trois groupes de librairies:"}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsx)(t.li,{children:"les librairies de testing qui permettent de g\xe9n\xe9rer des tests ;"}),"\n",(0,n.jsx)(t.li,{children:"les librairies de mocking qui permettent de surcharger le comportement de tes d\xe9pendances et de les monitorer ;"}),"\n",(0,n.jsx)(t.li,{children:"les librairies de g\xe9n\xe9ration de donn\xe9es."}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"Pour ma part:"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{style:{textAlign:"center"},children:(0,n.jsx)(t.strong,{children:"Frameworks de test"})}),(0,n.jsx)(t.th,{style:{textAlign:"center"},children:(0,n.jsx)(t.strong,{children:"Librairies de mocking"})}),(0,n.jsx)(t.th,{style:{textAlign:"center"},children:(0,n.jsx)(t.strong,{children:"Librairies de g\xe9n\xe9ration de donn\xe9es"})})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"center"},children:(0,n.jsx)(t.a,{href:"https://www.nuget.org/packages/MSTest.TestFramework/",children:"MSTest"})}),(0,n.jsx)(t.td,{style:{textAlign:"center"},children:(0,n.jsx)(t.a,{href:"https://www.nuget.org/packages/Moq/",children:"Moq"})}),(0,n.jsx)(t.td,{style:{textAlign:"center"},children:(0,n.jsx)(t.a,{href:"https://www.nuget.org/packages/AutoFixture/",children:"AutoFixture"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"center"},children:(0,n.jsx)(t.a,{href:"https://www.nuget.org/packages/NUnit/",children:"NUnit"})}),(0,n.jsx)(t.td,{style:{textAlign:"center"},children:(0,n.jsx)(t.a,{href:"https://www.nuget.org/packages/Ninject/",children:"NInject"})}),(0,n.jsx)(t.td,{style:{textAlign:"center"}})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"center"},children:(0,n.jsx)(t.a,{href:"https://www.nuget.org/packages/xunit/",children:"XUnit"})}),(0,n.jsx)(t.td,{style:{textAlign:"center"},children:(0,n.jsx)(t.a,{href:"https://www.nuget.org/packages/WireMock.Net/",children:"WireMock"})}),(0,n.jsx)(t.td,{style:{textAlign:"center"}})]})]})]}),"\n",(0,n.jsxs)(t.p,{children:["\ud83d\udd38 Sur ce point-ci particuli\xe8rement, j'aimerais mettre en avant le fait qu'il existe aussi des librairies de test pour le ",(0,n.jsx)(t.em,{children:"front-end"}),". En fait, le testing unitaire n'est pas r\xe9serv\xe9 aux d\xe9veloppeurs\n",(0,n.jsx)(t.em,{children:"back-end"}),". On citera notamment ",(0,n.jsx)(t.a,{href:"https://www.npmjs.com/package/jest",children:"Jest"}),", ",(0,n.jsx)(t.a,{href:"https://www.npmjs.com/package/mocha",children:"Mocha"}),", ",(0,n.jsx)(t.a,{href:"https://www.npmjs.com/package/cypress",children:"Cypress"})," et ",(0,n.jsx)(t.a,{href:"https://www.npmjs.com/package/jasmine",children:"Jasmine"})," comme librairies fortement li\xe9es au testing dans des applications JavaScript."]}),"\n",(0,n.jsx)(c.A,{id:"what-is-tdd",children:(0,n.jsxs)(t.p,{children:["Du coup, tu n'arr\xeates pas d'en parler. C'est quoi le"," ","\n",(0,n.jsx)("span",{style:{fontStyle:"italic"},children:"Test Driven Development"})," (TDD)?"]})}),"\n",(0,n.jsxs)(t.p,{children:["\ud83d\udd39 Je suis content que tu poses enfin la question! C'est pas comme si je t'avais tendu la perche plus d'une fois... C'est la joie, le bonheur, la r\xe9ponse ultime au sens de la vie, c'est tout \xe7a!\nNon, je rigole. En fait, c'est une fa\xe7on de mettre les tests au centre de ce que tu fais. On a parl\xe9 de tous les points positifs de faire des tests unitaires et aussi du fait qu'on les perdait si on faisait les tests \xe0 la fin sans forc\xe9ment aller dans le d\xe9tail.\nEn fait, la meilleure fa\xe7on de b\xe9n\xe9ficier des avantages des tests, c'est de les faire en premier mais ce n'est pas que \xe7a. Ce n'est pas d'abord faire tous les tests puis ensuite faire l'impl\xe9mentation.\nNon, il y vraiment un aspect it\xe9ratif que l'on retrouve d'ailleurs dans l'Agilit\xe9. Tu y vas \xe9tape par \xe9tape (",(0,n.jsx)(t.em,{children:"baby steps"}),"), tu ajoutes de nouveaux ",(0,n.jsx)(t.em,{children:"behaviors"})," en garantissant que ceux pr\xe9c\xe9demment ajout\xe9s fonctionnent toujours. Le filet de s\xe9curit\xe9 s'agrandit petit \xe0 petit naturellement.\nOn peut pr\xe9senter cela diff\xe9remment: imaginons une \xe9chelle. Cela sera toujours plus facile de la monter marche par marche que de les monter trois par trois."]}),"\n",(0,n.jsx)(t.p,{children:"J'ajouterais que contrairement aux id\xe9es re\xe7ues, TDD ne rend pas la dur\xe9e de d\xe9veloppement plus longue, bien au contraire. Par exemple, il n'est pas n\xe9cessaire d'ex\xe9cuter la solution pour savoir que le code fonctionne car il a enti\xe8rement \xe9t\xe9 d\xe9velopp\xe9 sur base de tests."}),"\n",(0,n.jsx)(i.A,{data:{src:"/img/test-driven-development.png",alt:"Cycle du TDD",type:"image",style:{border:".5em solid black"}},children:(0,n.jsx)(t.p,{children:"Le cycle de d\xe9veloppement sous TDD"})}),"\n",(0,n.jsxs)(t.p,{children:["La premi\xe8re \xe9tape, c'est l'\xe9criture d'",(0,n.jsx)(t.strong,{children:"un"})," test unitaire. Normalement, ce test doit ",(0,n.jsx)(t.em,{children:"obligatoirement"})," \xe9chouer puisqu'aucune impl\xe9mentation n'a \xe9t\xe9 \xe9crite pour qu'il r\xe9ussise.\nL'\xe9tape suivante, c'est donc d'\xe9crire le code qui permet de faire passer le test au vert. Et l\xe0, c'est tr\xe8s important de savoir que ce passage de rouge vers le vert doit \xeatre ",(0,n.jsx)(t.strong,{children:"le plus court possible"}),". C'est le moment o\xf9 on \xe0 le droit d'\xe9crire du code \"moche\", d'",(0,n.jsx)(t.em,{children:"hardcoder"})," un r\xe9sultat, de dupliquer, de coller une r\xe9ponse de StackOverflow, etc. Cela peut para\xeetre bizarre au d\xe9but mais il y a un vrai int\xe9r\xeat: v\xe9rifier que l'ajout d'un nouveau ",(0,n.jsx)(t.em,{children:"behavior"})," est possible sans casser tout ce qui a \xe9t\xe9 fait auparavant.\nL'\xe9tape suivante, c'est le refactoring. On a fait un code horrible, il faut maintenant faire quelque chose de propre. J'ai parl\xe9 plus t\xf4t de refactoring plus simple et s\xe9curis\xe9: on y est! On a notre ",(0,n.jsx)(t.em,{children:"green light"})," et le ",(0,n.jsx)(t.em,{children:"behavior"})," est garanti tant que cette ",(0,n.jsx)(t.em,{children:"light"})," reste ",(0,n.jsx)(t.em,{children:"green"}),". On a notre ",(0,n.jsx)(t.em,{children:"fast feedback loop"})," \xe0 port\xe9e de main (ou de clic, ou de raccourci) pour savoir si tout est ok. Tu me suis?\nEnsuite, on atteint la fin du cycle. Cela veut dire une chose: on recommence."]}),"\n",(0,n.jsx)(t.p,{children:"\ud83d\udd38 Je vais fournir un petit exemple pour que tout le monde se situe! Je vais faire \xe7a avec un calculateur de longueur de cha\xeene de caract\xe8res tiens, c'est simple \xe0 r\xe9aliser.\nDonc, je commence par \xe9crire le test unitaire:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-csharp",metastring:"title='tests/StringCalculatorTests.cs'",children:'[TestClass]\npublic class StringCalculatorTests\n{\n\t[TestMethod]\n\tpublic int Length_ShouldReturn_CorrectLength()\n\t{\n\t\tStringCalculator calculator = new();\n\n\t\tint result = calculator.Length("string"); // "string" fait 6 caract\xe8res de long, non?\n\n\t\tAssert.AreEqual(expected: 6, actual: result);\n\t}\n}\n'})}),"\n",(0,n.jsxs)(t.p,{children:["Le test \xe9choue parce que je n'ai pas encore cr\xe9\xe9 la classe ",(0,n.jsx)(t.code,{children:"StringCalculator"}),". Prochaine \xe9tape!"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-csharp",metastring:"title='src/StringCalculator.cs'",children:"public class StringCalculator\n{\n\tpublic int Length (string str)\n\t{\n\t\treturn 6;\n\t}\n}\n"})}),"\n",(0,n.jsx)(t.p,{children:"Ici, nous sommes donc \xe0 l'\xe9tape verte. On doit donc passer \xe0 l'\xe9tape bleue."}),"\n",(0,n.jsxs)(t.p,{children:["\ud83d\udd39 J'ajouterais que ton code est super moche vu que tu as ",(0,n.jsx)(t.em,{children:"hardcod\xe9"})," la valeur. Mais c'est bien! C'est le but!"]}),"\n",(0,n.jsx)(t.p,{children:"\ud83d\udd38 La plus longue: r\xe9aliser un refactoring du code qui nous permet de r\xe9pondre au besoin demand\xe9 (calculer la longueur d'une cha\xeene de caract\xe8res) tout en ne cassant pas le test:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-csharp",metastring:"title='src/StringCalculator.cs'",children:"public class StringCalculator\n{\n\tpublic int Length (string str)\n\t{\n\t\treturn str.Length; // la mani\xe8re la plus propre de renvoyer la longueur d'une cha\xeene de caract\xe8res en C#\n\t}\n}\n"})}),"\n",(0,n.jsx)(t.p,{children:"Et voil\xe0! Nous pouvons commencer l'\xe9criture d'un nouveau test unitaire."}),"\n",(0,n.jsx)(t.p,{children:"\ud83d\udd39 C'est un exemple assez simple mais tu y es. Il faut bien noter qu'il y a tout de m\xeame des r\xe8gles \xe0 respecter avec TDD mais je pourrais en parler pendant des heures alors on va s'arr\xeater ici!"}),"\n",(0,n.jsxs)(c.A,{id:"what-is-tcr",children:[(0,n.jsxs)(t.p,{children:["\ud83d\udd38 D'accord! D'ailleurs, j'ai ou\xefe dire que t'as r\xe9cemment appris le"," "]}),(0,n.jsx)("span",{style:{fontStyle:"italic"},children:(0,n.jsx)(t.p,{children:"Test && Commit || Revert"})})," ",(0,n.jsx)(t.p,{children:"(TCR). Tu sais expliquer en quoi \xe7a consiste?"})]}),"\n",(0,n.jsxs)(t.p,{children:["\ud83d\udd39 Exact, j'ai eu la chance de prendre connaissance de cette pratique via un ",(0,n.jsx)(t.em,{children:"workshop"}),". Pour sch\xe9matiser, disons que c'est une vision extr\xeame de TDD. Le meilleur moyen de l'utiliser est avec un script s\xe9par\xe9.\nCe script va analyser ta solution \xe0 chaque sauvegarde et va ensuite ex\xe9cuter tous tes tests. Si tous tes tests sont vert, il cr\xe9e un commit qui repr\xe9sente un \xe9tat stable de ta branche (Test && Commit).\nSi tu as un seul test qui ne passe plus, il fait un rollback pour revenir \xe0 l'\xe9tat du dernier commit (Revert), qui lui est stable.\nCela te force \xe0 avancer en ",(0,n.jsx)(t.em,{children:"baby steps"})," et une chose est mise en \xe9vidence: c'est ton dernier changement qui a cass\xe9 quelque chose."]}),"\n",(0,n.jsxs)(t.p,{children:["Au d\xe9but, tu passes par une phase de frustration parce que tu peux perdre du code mais justement, cela t'incite \xe0 avancer petit \xe0 petit pour limiter tes pertes. Plus tes ",(0,n.jsx)(t.em,{children:"steps"})," sont petites, moins tu risques de perdre du code. C'est un super enseignement en compl\xe9ment de TDD.\nLosque tu deviens relativement \xe0 l'aise avec tout \xe7a, tu remarques que tu avances de plus en plus vite et surtout, tu as toujours une branche qui fonctionne."]}),"\n",(0,n.jsx)(d.A,{id:"conclusion",children:"Conclusion"}),"\n",(0,n.jsx)(c.A,{children:"\ud83d\udd38 Un dernier mot pour cl\xf4turer cette interview?"}),"\n",(0,n.jsx)(t.p,{children:"\ud83d\udd39 \"Victoriae mundis et mundis lacrima\", ca ne veut absolument rien dire mais je trouve que c'est assez dans le ton.\nPlus s\xe9rieusement, \xe7a fait d\xe9j\xe0 un moment qu'on discute mais on a seulement gratt\xe9 la surface. Il reste beaucoup de points \xe0 aborder sur le testing. Je conseillerais donc vivement aux lecteurs d'\xeatre curieux sur le sujet, de lire et surtout de pratiquer. N'h\xe9sitez pas \xe0 demander de l'aide autour de vous.\nEt sinon, le testing, \xe7a vous tente?"}),"\n",(0,n.jsx)(i.A,{data:{src:"/img/developers-deliver-working-solutions.jpg",alt:"Developers deliver working solutions, not testable code",type:"image",style:{width:"50%",border:".1em grey solid"}}}),"\n",(0,n.jsx)(u.A,{url:o.pt})]})}function f(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(g,{...e})}):g(e)}},4259:(e,t,s)=>{s.d(t,{A:()=>i});var n=s(1107),r=s(4848);const i=e=>{let{children:t,...s}=e;return(0,r.jsx)(n.A,{as:"h2",...s,children:t})}},8441:(e,t,s)=>{s.d(t,{A:()=>i});var n=s(1107),r=s(4848);const i=e=>{let{children:t,...s}=e;return(0,r.jsx)(n.A,{as:"p",...s,children:t})}},3827:(e,t,s)=>{s.d(t,{A:()=>l});var n=s(299);const r={container:"container_KXSz",legend:"legend_Ecw3"};var i=s(4848);function a(e){if("object"!=typeof e||!e.type)return(0,i.jsx)(i.Fragment,{});switch(e.type){case"image":case"img":return e.url?(0,i.jsx)("a",{href:e.url,target:"_blank",children:(0,i.jsx)("img",{...e})}):(0,i.jsx)("img",{...e});case"video":return(0,i.jsx)("video",{controls:!0,width:e.width,children:e.sources&&Array.isArray(e.sources)?e.sources.map((e=>(0,i.jsx)("source",{src:e.src,type:e.type}))):(0,i.jsx)("source",{...e})});case"audio":return(0,i.jsx)("audio",{controls:!0,children:e.sources&&Array.isArray(e.sources)?e.sources.map((e=>(0,i.jsx)("source",{src:e.src,type:e.type}))):(0,i.jsx)("source",{...e})});case"html":return(0,i.jsx)("div",{className:r.container,children:(0,i.jsx)("iframe",{...e})});default:return(0,i.jsx)("object",{data:e.value,width:e.width,height:e.height})}}function l(e){let{data:t,children:s}=e;return t||s?(t.src&&!t.src.startsWith("http")&&(t.src=(0,n.A)(t.src)),t.sources&&t.sources.length>0&&(t.sources=t.sources.map((e=>({...e,src:e.src.startsWith("http")?e.src:(0,n.A)(e.src)})))),(0,i.jsxs)("figure",{children:[t&&a(t),(0,i.jsx)("figcaption",{className:r.legend,children:s})]})):(0,i.jsx)(i.Fragment,{})}},7388:(e,t,s)=>{s.d(t,{A:()=>g});var n=s(6540),r=s(231),i=s(9517),a=s.n(i),l=s(1312);const u="formContainer_ssZr",o="inputContainer_rIzC",c="input_xw7i",d="submit_jbGj",p="status_Xmiw",m="success_K3DK",h="sending_s6rj",x="error_ltts";var j=s(4848);const v=e=>{let t,{status:s,message:r,onValidated:i}=e;const v=()=>t&&t.value.indexOf("@")>-1&&a()(t.value)&&i({EMAIL:t.value});return(0,n.useEffect)((()=>{s&&"success"===s&&(t.text="")}),[s]),(0,j.jsxs)("div",{className:u,children:[(0,j.jsx)("h3",{children:(0,j.jsx)(l.A,{id:"newsletter.title",description:"The newsletter title",children:"Stay up to date, subscribe to my newsletter!"})}),(0,j.jsxs)("div",{className:o,children:[(0,j.jsx)("input",{className:c,ref:e=>t=e,type:"email",placeholder:(0,l.T)({id:"newsletter.placeholder",message:"Enter your email address",description:"The placeholder within the input"}),onKeyDown:e=>"Enter"===e.key?v():null,required:!0,autoComplete:"email"}),(0,j.jsxs)("a",{className:d+" tooltip",rel:"noopener",onClick:v,type:"submit",children:[(0,j.jsx)("svg",{"aria-hidden":"true",focusable:"false","data-prefix":"far","data-icon":"paper-plane",className:"svg-inline--fa fa-paper-plane fa-w-16",role:"img",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 512 512",children:(0,j.jsx)("path",{fill:"currentColor",d:"M440 6.5L24 246.4c-34.4 19.9-31.1 70.8 5.7 85.9L144 379.6V464c0 46.4 59.2 65.5 86.6 28.6l43.8-59.1 111.9 46.2c5.9 2.4 12.1 3.6 18.3 3.6 8.2 0 16.3-2.1 23.6-6.2 12.8-7.2 21.6-20 23.9-34.5l59.4-387.2c6.1-40.1-36.9-68.8-71.5-48.9zM192 464v-64.6l36.6 15.1L192 464zm212.6-28.7l-153.8-63.5L391 169.5c10.7-15.5-9.5-33.5-23.7-21.2L155.8 332.6 48 288 464 48l-59.4 387.3z"})}),(0,j.jsx)("span",{className:"tooltipText",children:"Submit!"})]})]}),"sending"===s&&(0,j.jsx)("div",{className:`${p} ${h}`,children:(0,j.jsx)(l.A,{id:"newsletter.sending",description:"The text stating the email is being registered in the newsletter list",children:"Sending..."})}),"error"===s&&(0,j.jsx)("div",{className:`${p} ${x}`,dangerouslySetInnerHTML:{__html:r}}),"success"===s&&(0,j.jsx)("div",{className:`${p} ${m}`,dangerouslySetInnerHTML:{__html:r}})]})};function g(e){let{url:t}=e;return(0,j.jsx)(r.A,{url:t,render:e=>{let{subscribe:t,status:s,message:n}=e;return(0,j.jsx)(v,{status:s,message:n,onValidated:e=>t(e)})}})}},695:(e,t,s)=>{s.d(t,{A:()=>i});var n=s(1312),r=s(4848);function i(){return(0,r.jsx)("div",{className:"center",children:(0,r.jsx)("span",{className:"italic",children:(0,r.jsx)(n.A,{id:"reminder",description:"The text stating that what is written in this website is my own opinions and only mine",children:"Just a quick reminder: the opinions expressed here are stricly my own. They do not represent the opinions or views of my current employer nor any of my previous ones."})})})}},2467:(e,t,s)=>{s.d(t,{A:()=>l});var n=s(5260),r=s(4586),i=s(299),a=s(4848);function l(e){let{uri:t,image:s,type:l}=e;const{siteConfig:u}=(0,r.A)(),{projectName:o,customFields:{mType:c,twitterName:d}}=u,p=l||c,m=s?(0,i.A)(s):null,h=(0,i.A)(t);return(0,a.jsx)(a.Fragment,{children:(0,a.jsxs)(n.A,{children:[h&&(0,a.jsx)("link",{rel:"canonical",href:h}),h&&(0,a.jsx)("meta",{property:"og:url",content:h}),m&&(0,a.jsx)("meta",{property:"og:image",content:m}),p&&(0,a.jsx)("meta",{property:"og:type",content:p}),o&&(0,a.jsx)("meta",{property:"og:site_name",content:o}),d&&(0,a.jsx)("meta",{property:"twitter:site",content:`@${d}`}),m&&(0,a.jsx)("meta",{name:"twitter:image",content:m}),m&&(0,a.jsx)("meta",{name:"twitter:image:alt",content:"Banner image"})]})})}},299:(e,t,s)=>{s.d(t,{A:()=>i});var n=s(4586),r=s(6025);function i(e){const{siteConfig:t}=(0,n.A)();let{url:s}=t||{};return`${s}${(0,r.Ay)(e)}`}},8453:(e,t,s)=>{s.d(t,{R:()=>a,x:()=>l});var n=s(6540);const r={},i=n.createContext(r);function a(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),n.createElement(i.Provider,{value:t},e.children)}},6582:e=>{e.exports=JSON.parse('{"pt":"https://tinaeldevresse.us7.list-manage.com/subscribe/post?u=8e00a760248c6a6e95f5bbc12MAILCHIMP_URL_VALUEid=8283ccedca"}')}}]);