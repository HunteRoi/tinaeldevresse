<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Tina√´l Devresse Blog</title>
        <link>https://hunteroi.github.io/tinaeldevresse.eu/fr/blog</link>
        <description>Tina√´l Devresse Blog</description>
        <lastBuildDate>Thu, 06 Apr 2023 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>fr</language>
        <copyright>Copyright ¬©2020-present Tina√´l Devresse. Built with Docusaurus.</copyright>
        <item>
            <title><![CDATA[Le partage, c'est l'entraide]]></title>
            <link>https://hunteroi.github.io/tinaeldevresse.eu/fr/blog/sharing-is-caring</link>
            <guid>https://hunteroi.github.io/tinaeldevresse.eu/fr/blog/sharing-is-caring</guid>
            <pubDate>Thu, 06 Apr 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Depuis un moment maintenant, je r√©fl√©chis √† ma carri√®re et √† comment je voudrais qu'elle √©volue. T'y penses aussi, non ? √Ä chaque entretien en tant que jeune travailleur, on te demande "o√π est-ce que vous vous voyez dans x ann√©es ?". Je n'ai pas eu la pi√®ce qui tombe tout de suite, mais avec l'exp√©rience, tu apprends et comprends ce que tu aimes et plus sp√©cifiquement ce que tu n'aimes pas. Finalement, o√π est-ce que je me vois dans quelques ann√©es ?]]></description>
            <content:encoded><![CDATA[<a href="/tinaeldevresse.eu/fr/blog/sharing-is-caring"><figure><img src="https://hunteroi.github.io/tinaeldevresse.eu/fr/img/coaching.jpg" alt="Example Mapping utilis√© pour r√©cup√©rer des retours sur ma session de coaching" type="image"><figcaption class="legend_Ecw3">Les retours de mon client sur ma premi√®re mission de coaching</figcaption></figure></a><p>Depuis un moment maintenant, je r√©fl√©chis √† ma carri√®re et √† comment je voudrais qu'elle √©volue.
T'y penses aussi, non ? √Ä chaque entretien en tant que jeune travailleur, on te demande "o√π est-ce que vous vous voyez dans x ann√©es ?".
Je n'ai pas eu la pi√®ce qui tombe tout de suite, mais avec l'exp√©rience, tu apprends et comprends ce que tu aimes et plus sp√©cifiquement ce que tu n'aimes pas.</p><p>Finalement, o√π est-ce que je me vois dans quelques ann√©es ?</p><hr><div class="center"><span class="italic">Un simple petit rappel: les opinions exprim√©es ici sont strictement les miennes. Elles ne repr√©sentent pas les opinions ou vues de mon employeur actuel ni aucun des pr√©c√©dents.</span></div><hr><p>Si tu me connais, tu sais probablement que je dirige ma carri√®re professionnelle vers l'apprentissage continu (pour moi comme pour ceux en face de moi !).
Dans cet article, je vais tenter d'expliquer pourquoi j'ai pris cette d√©cision et vers o√π je me dirige dans le futur.</p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="un-peu-de-contexte">Un peu de contexte<a href="#un-peu-de-contexte" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h2><p>J'ai toujours √©t√© √©clectique. J'aime essayer de nouvelles choses et voir comment je le fais (et comprendre comment je le peux faire mieux).
C'est l'une des raisons pour lesquelles j'ai d√©cid√© d'√©tudier l'informatique d'ailleurs.</p><p>Dans ce secteur, apprendre et partager les connaissances et l'exp√©rience est un <em>must</em>.
L'informatique repr√©sente un monde qui bouge bien plus vite que tous les autres que je connais.
Hier, tu aurais engag√© quelqu'un pour construire ton site web.
Aujourd'hui, tu peux le faire toi-m√™me avec ChatGPT et d'autres IAs qui font le gros du travail pour toi.
Le fait que tout va si vite et que tu ne peux pas ma√Ætriser chacune des technologies qui existe dans ce monde rend le constat tr√®s clair:</p><ul><li>Arr√™te d'essayer de tout savoir, fais confiance aux autres et apprends d'eux !</li><li>Tout le monde ne sait pas tout, laisse les autres apprendre de toi !</li><li>Le travail d'√©quipe fait la diff√©rence, crois en les autres.</li></ul><p>Bien que je loue le fait de travailler en √©quipe, nous sommes √† la porte d'une nouvelle √®re dans notre soci√©t√© : il y a beaucoup plus de gens
avec 20-30 ans d'exp√©rience que de jeunes dans les entreprises et ils n'en sont pas encore √† la retraite.
Cela a 2 incov√©nients :</p><ol><li>Ces profils exp√©riment√©s ne sont pas toujours volontaires pour mettre garder leur connaissance du monde IT √† jour (et je peux comprendre qu'ils sont fatigu√©s et qu'ils arr√™teront bient√¥t de travailler)
puis ils n'aiment pas forc√©ment partager avec les autres.</li><li>La diff√©rence d'√¢ge rend difficile de se connecter avec les nouveaux venus.</li></ol><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="carri√®re-courte-mais-un-tas-dexp√©riences">Carri√®re courte mais un tas d'exp√©riences<a href="#carri√®re-courte-mais-un-tas-dexp√©riences" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h2><p>Pour √™tre honn√™te, j'ai boss√© pour plusieurs entreprises dans ma carri√®re. Je voulais voir si l'herbe √©tait plus verte ci et l√†.
Et j'ai toujours vu la m√™me chose : des profils uniques essayant soit de tirer vers le haut les √©quipes et les projets
ou condamnant toute chose et tout personne, ralentissant les progr√®s et br√ªlant de l'argent inutilement. Malheureusement pour moi, √ßa a plus souvent √©t√© le second cas de figure.
Ne te d√©trompe pas, cela dit ! J'adore cr√©er. J'adore travailler en √©quipe afin d'amener les solutions des gens √† la vie. Et j'adore particuli√®rement apprendre.
Mais apr√®s 3 ans de travail professionnel dans des entreprises vari√©es, je me suis lass√© de <em>ces gens qui ne visent pas l'excellence comme moi</em>.
Je veux dire, pourquoi d√©velopperais-tu une solution digitale si c'est pour mal le faire ? Tout ce que tu fais, c'est soit tirer une balle dans le futur-toi
ou dans l'un de tes coll√®gues qui va devoir le maintenir dans le futur.
Tout cela est exactement la raison pour laquelle j'ai d√©cid√© de renverser les r√¥les.</p><p>J'ai d√©cid√© de pencher sur ce probl√®me afin d'√©viter aux autres l'impression de faire des efforts st√©riles.
Je voulais √©viter les √©puisements inutiles comme beaucoup d'autres avant moi qui se sont lass√©s de s'efforcer √† perte.</p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="tout-vient-√†-point-√†-qui-sait-attendre">Tout vient √† point √† qui sait attendre<a href="#tout-vient-√†-point-√†-qui-sait-attendre" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h2><p>Durant ces 2 derni√®res ann√©es, j'ai cherch√© un moyen d'am√©liorer la valeur que nous, d√©veloppeurs, amenons √† nos business.
Mais en r√©alit√©, j'ai principalement cherch√© des moyens d'√©viter la fatigue, l'√©puisement et le surmenage.
En effet, je ressentais mes niveaux de stress et de fatigue augmenter bien au dessus de la moyenne. Je ne pouvais pas le supporter, mais je n'avais aucune id√©e de comment
r√©gler ces probl√®mes...</p><p>√âtonnament pour moi, en 2021, j'ai re√ßu un message d'une ancienne professeure.
Elle me demandait si j'√©tais d'accord de prendre quelques heures √† l'universit√© pour remplacer un coll√®gue malade.
Ce fut le d√©clic. Revenir l√† o√π tout a commenc√©, l√† o√π j'ai appris mon m√©tier, √ßa m'a fait r√©aliser plein de choses!ü§©</p><p>J'avais √©volu√©. Mes exp√©riences dans le monde professionnel m'ont connect√© √† des connaissances et des gens. J'ai d√©couvert de nouvelles fa√ßons de travailler,
de nouvelles mani√®res de penser et j'ai rencontr√© mon id√©al. <strong>J'ai compris que je voulais apprendre, mais surtout enseigner.</strong></p><p>Depuis lors, je partage mes connaissances, mon √©tat d'esprit et comment l'excellence technique peut apporter le bonheur dans le bon environnement.
Que cela soit pour des √©tudiants √† l'H√©nallux, ou pour mes clients face √† des coll√®gues.</p><p>Et cela m'a fait r√©aliser o√π je voulais aller... üöÄ</p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="retour-aux-sources">Retour aux sources<a href="#retour-aux-sources" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h2><p>As-tu d√©j√† eu cette sensation de ne pas comprendre l'enti√®ret√© d'un concept expliqu√© durant un cours, une formation ou que sais-je ?
Ne t'inqui√®te pas, tu n'es pas le seul ! J'ai √©t√© dipl√¥m√© en 2019. Relire maintenant les m√™mes cours que j'ai eu √† l'√©poque, waw quelle diff√©rence!
J'ai pu r√©ellement voir que je m'√©tais am√©lior√© et que j'avais appris un tas de choses en peu de temps.
C'est vraiment exaltant pour l'avenir ! üòÉ</p><p>Cependant, c'est assez √©trange pour un gars de 24 ans d'enseigner √† des gens de son √¢ge ou parfois m√™me plus √¢g√©.
Et je dois l'admettre, me forcer √† <em>retourner aux sources</em>, √† comprendre ce que je dois enseigner afin de le vulgariser
et <strong>partager ma passion</strong>, c'est r√©ellement une exp√©rience grandissante.</p><p>Au d√©but, √™tre prof, j'en √©tais pas s√ªr. C'est vrai quoi ! Tout le monde a sa part du syndr√¥me de l'imposteur √† g√©rer, non ?
Mais en r√©alit√©, √† chaque fois que j'ai re√ßu une nouvelle responsabilit√© l√†-bas, je me suis prouv√© le contraire.
Je suis rentr√© dans la classe, j'ai fait mon truc et tout le monde est reparti content (enfin sauf quand je donne des devoirsüòÅ).</p><p>Mais j'ai continu√© √† me demander... Pourquoi est-ce si compliqu√© de travailler si toutes ces connaissances sont disponibles et personne ne les conna√Æt (ou les utilise) ?
J'ai l'impression que la majorit√© des professionnels actuels, souvent plus vieux que moi, manque d'un √©l√©ment fondamental : l'√©tat d'esprit.
√Ä l'H√©nallux, nous n'apprenons pas un langage ou un mod√®le de conception sp√©cifique. Nous tentons d'apprendre aux √©tudiants √† continuellement s'am√©liorer par eux-m√™mes.
Cela n'a aucune importance que tu saches faire du C++, du Cobol, du NodeJS ou du Python. Cela n'a aucune importance que tu ne connaisses pas tous les d√©tails
sur le r√©seau ou que tu n'aies jamais exp√©riment√© tous les syst√®mes d'op√©ration. <em>Tu peux t'auto-former!</em></p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="apprendre-√†-des-pros-">Apprendre √† des pros ?<a href="#apprendre-√†-des-pros-" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h2><p>Quand je travaillais au Luxembourg, j'ai rencontr√© des personnes exceptionnelles que j'ai imm√©diatement consid√©r√©s comme des mentors (üëã <a href="https://www.linkedin.com/in/guillaumefaas/" target="_blank" rel="noopener noreferrer">Guillaume Faas</a> &amp; <a href="https://www.linkedin.com/in/yoanthirion/" target="_blank" rel="noopener noreferrer">Yoan Thirion</a>).
Je veux dire... ils ont l'√©tat d'esprit eux ! 3 jours en leur compagnie ont une bien plus grande valeur que 5 semaines pass√©s n'importe o√π ailleurs en terme d'apprentissage.
J'ai ramen√© √ßa avec moi quand je suis revenu en Belgique (pas eux √©videmment..! mais bien leur mani√®re de partager ce qu'ils savent, et pourquoi ils le font).</p><p>√Ä travers mon employeur actuel, j'ai boss√© pour des clients vari√©s qui me voyaient principalement en tant que d√©veloppeur.
Mais mon int√©r√™t se trouve dans le fait d'aider mes clients √† s'am√©liorer.
J'ai commenc√© √† chercher des missions challengeantes o√π je pouvais √™tre plus qu'un d√©veloppeur, o√π je pouvais autant leur apprendre qu'en apprendre d'eux.</p><p>Puis c'est arriv√©. J'ai eu l'invraisemblable chance d'apporter mon expertise dans une merveilleuse startup wallonne appel√©e <a href="https://pluriell.app/" target="_blank" rel="noopener noreferrer">Pluriell</a>.
Cette nouvelle aventure ‚Äì ma premi√®re mission de coach ‚Äì a √©t√© extr√™ment positive pour ce client! Et pour moi aussi!
√Ä travers de nombreuses discussions, pr√©sentations, des accompagnements personnalis√©s pour des probl√®mes sp√©cifiques, et des katas, je pense leur avoir apporter une nouvelle vision,
de nouvelles m√©thodologies, des normes et des objectifs mais surtout de la confiance et des connaissances dans ce qu'ils pourraient faire/font bien et dans ce qu'ils pourraient faire/font mal.</p><p>Lors qu'on entame la partie "ce que j'en ai tir√©", et qu'on met de c√¥t√© le fait que cela a √©largi mon point de vue sur la fa√ßon dont fonctionne une startup belge,
je peux dire que √ßa m'a apport√© plus d'exp√©rience et de relation en tant que coach.
Puis √ßa a d√©finitivement renforc√© ma volont√© d'interagir avec les autres, d'enseigner et d'apprendre d'eux.
Et honn√™tement, avec des professionnels exp√©riment√©s comme Yoan et Guillaume pour me montrer le chemin, je me suis senti comme sur un petit nuage ‚òÅÔ∏è</p><p>Dans une mise √† jour plus r√©cente de ma vie, je suis devenu un co-organisateur du <a href="https://www.meetup.com/software-craft-luxembourg/" target="_blank" rel="noopener noreferrer">meetup Software Craftsmanship Luxembourg</a>
avec Guillaume et <a href="https://www.linkedin.com/in/arthur-grailet-a647a1189/" target="_blank" rel="noopener noreferrer">Arthur Grailet</a>, meetup √† travers lequel nous nous rassemblons avec d'autres individus incroyables pour partager nos compr√©hensions..
J'apprends toujours les fic√®les du m√©tier, mais faire partie de cette communaut√© et me forcer √† sortir de ma zone de confort sont vraiment des choses qui me manquaient en n'√©tant plus √©tudiant.</p><a href="https://sathishkannan162.github.io/the-one-genius-lone-genius-myth/" target="_blank" rel="noopener noreferrer"><figure><img src="https://hunteroi.github.io/tinaeldevresse.eu/fr/img/no-genius-only-scenius.jpeg" alt="No genius, only scenius" type="image"><figcaption class="legend_Ecw3">Il n'y a pas de g√©nie, juste des scenius!</figcaption></figure></a><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="de-dev-√†-prof--coach">De dev √† prof &amp; coach<a href="#de-dev-√†-prof--coach" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h2><p>√ätre un prof est une chose. Quand tu dois te plonger dans le JavaScript ou expliquer comment √©crire des algorithmes efficaces √† des
personnes qui viennent tout juste de quitter les bancs de l'√©cole, √ßa force √† r√©fl√©chir.
Mais coacher des gens bien plus exp√©riment√©s <em>dans leur propre domaine</em>... √ßa, c'est nouveau!üòÜ</p><p>Je pense que ces 2 r√¥les m'apportent ce que je pense comme <em>√™tre un vrai consultant informatique</em> : aider concr√®tement les gens.
Cela inclut √©videmment :</p><ul><li>de comprendre comment ils se sentent (parfois, il suffit simplement des les √©couter),</li><li>de les aider √† optimiser leur mani√®re de travailler en pointant vers ce qu'ils pourraient am√©liorer,</li><li>mais aussi en leur montrant ce qu'ils font d√©j√† de bien !
Et le plus important finalement... c'est de discuter, de donner des conseils bas√©s sur le contexte et d'apporter de la valeur.</li></ul><p>Enseigner et coacher... ce sont deux synonymes finalement.
L'id√©e, c'est de construire une histoire, la narrer et penser que les gens ont compris la morale qui s'y cache.
Si ce n'est pas le cas, √ßa fait partie du boulot d'attaquer d'un autre angle pour leur apporter ce dont ils ont besoin pour avancer.</p><p>J'aime v√©ritablement ces m√©tiers. Tu as besoin de comprendre comment les gens pensent, et comment tu peux leur transmettre la bonne information (et √©motion).
Tu dois ma√Ætriser ton sujet, et si pas : √™tre transparent et admettre que tu ne sais pas tout.
Ils n'en savent pas plus de toute fa√ßon, donc tu peux (et devrais) simplement rechercher la r√©ponse avec eux pour que tout le monde √©volue!</p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="conclusion">Conclusion<a href="#conclusion" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h2><p>Parfois, il faut revenir aux racines pour cro√Ætre üå≥</p><p>J'attends avec impatience les prochaines surprises que la vie va mettre sur mon chemin, et je suis certain que tout le monde (et moi en particulier)
va en apprendre plus √† travers ce voyage!</p><p>D'ailleurs, si tu cherches un Coach Agile Technique, contacte-moi sur <a href="https://linkedin.com/in/tinael-devresse" target="_blank" rel="noopener noreferrer">LinkedIn</a>.</p><div class="formContainer_ssZr"><h3>Reste √† jour, inscris-toi √† ma newsletter!</h3><div class="inputContainer_rIzC"><input type="email" class="input_xw7i" placeholder="Entre ton adresse email" required="" autocomplete="email"><a class="submit_jbGj tooltip" rel="noopener" type="submit"><svg aria-hidden="true" focusable="false" data-prefix="far" data-icon="paper-plane" class="svg-inline--fa fa-paper-plane fa-w-16" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path fill="currentColor" d="M440 6.5L24 246.4c-34.4 19.9-31.1 70.8 5.7 85.9L144 379.6V464c0 46.4 59.2 65.5 86.6 28.6l43.8-59.1 111.9 46.2c5.9 2.4 12.1 3.6 18.3 3.6 8.2 0 16.3-2.1 23.6-6.2 12.8-7.2 21.6-20 23.9-34.5l59.4-387.2c6.1-40.1-36.9-68.8-71.5-48.9zM192 464v-64.6l36.6 15.1L192 464zm212.6-28.7l-153.8-63.5L391 169.5c10.7-15.5-9.5-33.5-23.7-21.2L155.8 332.6 48 288 464 48l-59.4 387.3z"></path></svg><span class="tooltipText">Submit!</span></a></div></div>]]></content:encoded>
            <category>d√©veloppement</category>
            <category>coach</category>
            <category>agilit√©</category>
            <category>IT</category>
            <category>art</category>
            <category>artisan d√©veloppeur</category>
        </item>
        <item>
            <title><![CDATA[Quelle architecture j'utilise pour mes projets?]]></title>
            <link>https://hunteroi.github.io/tinaeldevresse.eu/fr/blog/why-did-i-switch-to-clean-architecture</link>
            <guid>https://hunteroi.github.io/tinaeldevresse.eu/fr/blog/why-did-i-switch-to-clean-architecture</guid>
            <pubDate>Wed, 01 Jun 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[J'ai d√©cid√© de parler du choix d'architecture que je prends quand je d√©veloppe mes apps!]]></description>
            <content:encoded><![CDATA[<a href="/tinaeldevresse.eu/fr/blog/why-did-i-switch-to-clean-architecture"><figure><img src="https://hunteroi.github.io/tinaeldevresse.eu/fr/img/why-did-i-switch-to-clean-architecture.png" alt="Mon Amour pour la Clean Architecture" type="image"><figcaption class="legend_Ecw3"></figcaption></figure></a><p>J'ai d√©cid√© de parler du choix d'architecture que je prends quand je d√©veloppe mes apps!</p><hr><div class="center"><span class="italic">Un simple petit rappel: les opinions exprim√©es ici sont strictement les miennes. Elles ne repr√©sentent pas les opinions ou vues de mon employeur actuel ni aucun des pr√©c√©dents.</span></div><hr><p>Il n'y a pas si longtemps, des coll√®gues m'ont pos√© la question suivante:</p><blockquote><p>Comment est-ce que tu structures tes projets puisque lorsqu'ils √©voluent, l'architecture "N-Tier" devient plus complexe et tend √† cr√©er des solutions en d√©sordre.</p></blockquote><p>Je n'ai pas toutes les r√©ponses mais ce que j'ai r√©pondu est que si √ßa touche √† mes projets, je fais un simple choix:</p><ul><li>Si je travaille sur une app CRUD basique, je choisis d√©finitivement la 3-Tier architecture.</li><li>Mais si j'ai besoin de construire une application plus complexe qui n√©cessite une logique business importante et qui doit "crier son but",
je choisis alors directement ce que Robert C. Martin a appel√© <a href="https://blog.cleancoder.com/uncle-bob/2012/08/13/the-clean-architecture.html" target="_blank" rel="noopener noreferrer">la Clean Architecture</a> en 2012.
Bien s√ªr, ma version ne suit pas strictement ce qu'Uncle Bob d√©crit dans son blog puisque je l'ai adapt√© √† mes besoins mais parlons-en!</li></ul><p>De nos jours cependant, j'ai plut√¥t tendance √† faire pencher la balance en faveur du deuxi√®me choix.
Mais <strong>qu'est-ce que j'aime dans la Clean Architecture et pas dans la N-Tier?</strong></p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="la-n-tier-architecture">La N-Tier architecture<a href="#la-n-tier-architecture" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h2><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="quest-ce-que-cest">Qu'est-ce que c'est?<a href="#quest-ce-que-cest" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h3><p>Premi√®rement, √ßa serait une honte de te parler de Clean Architecture et ne pas aborder l'enseignement que j'ai re√ßu √† l'√©cole : l'architecture n-tier.
Ce type d'archi est courament pr√©sent√© et confondu avec l'une de ses versions sp√©cifiques: l'architecture 3-tiers.</p><p>Cette archi place les donn√©es comme √©tant le coeur de l'application. Elle est compos√©e de 3 couches:</p><ol><li>la couche Pr√©sentation, responsable de pr√©senter l'information √† l'ext√©rieur ;</li><li>la couche Logique, responsable de la logique business qui doit √™tre appliqu√©e aux donn√©es ;</li><li>la couche Donn√©es, responsable de l'acc√®s aux donn√©es (ORM, base de donn√©es, etc.).</li></ol><figure><img src="https://hunteroi.github.io/tinaeldevresse.eu/fr/img/3-tier-architecture.jpg" alt="3-tier schema" type="image"><figcaption class="legend_Ecw3"></figcaption></figure><p>Bien s√ªr, le "n" signifie qu'il peut y avoir plus ou moins de couches. Les √©l√©ments d√©crits ci-dessus ne repr√©sente qu'un d√©nominateur commun.
Il existe des structures identiques comme l'archi 2-tiers, la Couche Unique, la 4-tiers, ...
Quand on d√©veloppe un projet, on adapte l'architecture √† ses besoins. Tu pourrais m√™me sub-diviser les 3 couches ci-dessus en des sous-couches d√©pendamment de tes besoins.</p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="avantages--inconv√©nients">Avantages &amp; Inconv√©nients<a href="#avantages--inconv√©nients" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h3><p>En ce qui concerne les <strong>avantages</strong>, on peut lister les suivants:</p><ul><li>plus s√©curis√© ‚Äî la couche Pr√©sentation (typiquement l'UI) n'est pas directement reli√©e √† la base de donn√©es. Toutes les connexions sont donc prot√©g√©es par la couche Logique.</li><li>facilement maintenable ‚Äî au moment de sa "cr√©ation", cette archi permettait aux d√©veloppeurs de maintenir leurs projets plus facilement que les pr√©c√©dentes.</li><li>facilement √† r√©utiliser ‚Äî c'est bien plus facile de r√©utiliser la logique de chaque couche.</li></ul><p>Voyons voir ce qu'il en est des <strong>inconv√©nients</strong>:</p><ul><li>augmentation de l'effort ‚Äî impl√©menter de nouvelles fonctionnalit√©s prend plus de temps puisque tu dois passer √† travers toutes les couches.
Changer une chose dans la couche Database oblige √©galement √† r√©fl√©chir cette modification dans les couches Logique et Pr√©sentation puisqu'elles sont li√©es entre elles.</li><li>augmentation de la complexit√© ‚Äî quand la solution cro√Æt, elle devient plus difficile √† garder propre, compr√©hensible et √† pr√©dire l'impact de changements dans le code.</li><li>bien plus compliqu√© √† tester ‚Äî impl√©menter des tests est beaucoup plus compliqu√©s parce que chaque couche est fortement coupl√©e √† la couche qui suit.</li></ul><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="quand-lutiliser">Quand l'utiliser?<a href="#quand-lutiliser" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h3><p>D'apr√®s moi, utiliser l'architecture n-tier est un bon d√©but quand tu veux d√©velopper le prototype d'une id√©e parce que tu peux rapidement d√©montrer quelque chose.
Cela va cependant tendre √† rendre les choses moins bien dans le futur.</p><p>Tu pourrais aussi utiliser cette archi si tu dois construire une simple application qui r√©alise du CRUD.
D'ailleurs, c'est assez courant de faire √ßa quand tu veux simplement lire le contenu d'une base de donn√©es. Je l'ai fait chez l'un de mes employeurs un jour.</p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="la-clean-architecture">La Clean Architecture<a href="#la-clean-architecture" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h2><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="quest-ce-que-cest-1">Qu'est-ce que c'est?<a href="#quest-ce-que-cest-1" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h3><figure><img src="https://hunteroi.github.io/tinaeldevresse.eu/fr/img/clean-architecture.jpg" alt="Onion schema of CA" type="image"><figcaption class="legend_Ecw3"></figcaption></figure><p>Cette architecture place le Domaine au centre, et en charge de tout. Elle demande √©galement plus de design intentionnel puisque tu ne te bases pas directement sur ta base de donn√©es.
Construit sur base du <a href="https://martinfowler.com/bliki/CQRS.html" target="_blank" rel="noopener noreferrer">patron CQRS</a>, je la consid√®re comme le meilleur moyen d'√©crire une application avec la simplicit√© et maintenabilit√© en t√™te.</p><p>Historiquement, l'archi 3-tiers est arriv√©e en 1992 gr√¢ce √† John J. Donovan et fut ensuite suivie par d'autres:</p><ul><li>Hexagonal Architecture / Ports &amp; Adapters (2005, Alistair Cockburn),</li><li>Onion Architecture (2008, Jeffrey Palermo),</li><li>Clean Architecture (2012, Robert C. Martin).</li></ul><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="avantages--inconv√©nients-1">Avantages &amp; Inconv√©nients<a href="#avantages--inconv√©nients-1" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h3><p>Une seconde liste pour les <strong>avantages</strong>:</p><ul><li>code moins coupl√©, meilleure testabilit√© ‚Äî comme le code est moins coupl√© (merci √† l'utilisation d'abstractions partout o√π c'est possible), tu peux facilement "mocker" tes d√©pendances et tester unitairement tes composants.
Cela facilite aussi le d√©veloppement de chaque couche puisqu'elles ne sont pas fortement coupl√©es ensemble, permettant ainsi aux √©quipes de travailler en parall√®le sur chaque couche si besoin est.</li><li>s√©paration des responsabilit√©s ‚Äî l'archi te force un peu √† penser √† ta structure et aux d√©pendances de tes composants, remet potentiellement en cause de mauvaises d√©cisions, etc.
L'interface utilisateur ne s'int√©resse √©galement pas √† la structure de la base de donn√©es, ni quel package est utilis√© pour g√©n√©rer un PDF par exemple...</li><li>meilleure exposition des fonctionnalit√©s (x10 si tu utilises l'Use-Case Driven Development en plus!)</li><li>meilleure application des principes SOLID</li><li>meilleure √©volutivit√©</li></ul><p>Et une nouvelle liste pour les <strong>inconv√©nients</strong>:</p><ul><li>augmentation du temps de d√©veloppment √† partir de rien ‚Äî tu dois pr√©parer plus de choses au d√©but du projet avant de pouvoir commencer une fonctionnalit√© qui a de la valeur pour le client.</li><li>augmentation du nombre de lignes de code ‚Äî il te faut plus de fichiers (classes et interfaces) que dans une n-tier.</li><li>possible perte d'optimisation ‚Äî en n-tier, tu es forc√©ment plus proche de l'impl√©mentation de cela te permet de meilleures performances.
Cette archi te fait perdre cette optimisation √† profit de moins de couplage de ton code, ce qui est un bon √©change selon moi.</li></ul><p>NDLR: Honn√™tement, en relisant ces inconv√©nients, je ne les consid√®re pas r√©ellement comme des probl√®mes.
Ils sont facilement surmontables avec l'exp√©rience, et te font gagner du temps sur le long terme, particuli√®rement si tu d√©cides de travailler avec des tests (ce que tu devrais toujours faire si tu veux produire du bon code!).</p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="quand-lutiliser-1">Quand l'utiliser?<a href="#quand-lutiliser-1" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h3><p>Quand tu dois d√©velopper des applications complexes, que tu veux tester tes fonctionnalit√© et d√©livrer quelque chose qui a de la valeur et qui ne va pas augmenter la taille du buglog une fois en production.
Elle peut aussi √™tre mix√©e avec des m√©thodologies qui en font une fiabilit√© comme <a href="https://en.wikipedia.org/wiki/Domain-driven_design" target="_blank" rel="noopener noreferrer">DDD</a> et <a href="https://en.wikipedia.org/wiki/Test-driven_development" target="_blank" rel="noopener noreferrer">TDD</a>.</p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="du-coup-pourquoi-est-ce-que-je-pr√©f√®re-cette-derni√®re">Du coup, pourquoi est-ce que je pr√©f√®re cette derni√®re?<a href="#du-coup-pourquoi-est-ce-que-je-pr√©f√®re-cette-derni√®re" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h2><p>Tu dois savoir maintenant que je suis fatigu√© de d√©velopper des choses moches, je suis fatigu√© de travailler pour des entreprises qui te disent "d√©veloppe plus vite et on am√©liorera plis tard".
Plus tard n'arrive jamais.</p><p>Je suis si fatigu√© d'une telle mani√®re de travailler que je suis tomb√© amoureux de 3 choses:</p><ol><li>la Clean Architecture, et</li><li>le Test-Driven Development, et</li><li>le mouvement <a href="https://fr.wikipedia.org/wiki/Software_craftsmanship" target="_blank" rel="noopener noreferrer">Software Craftsmanship</a>.</li></ol><p>Mais plus s√©rieusement, je n'explique pas forc√©ment <em>pourquoi</em> je la pr√©f√®re... Alors, en quelques mots, laisse-moi te l'expliquer.
Il faut savoir que d√©velopper une application sans tests, c'est comme d√©velopper les yeux ferm√©s: tu fais des fautes.
J'ai donc creus√© cette partie de mon travail que je n√©gligeais √† l'√©poque: le testing.
Gr√¢ce √† mon exp√©rience chez PwC Luxembourg, j'ai rencontr√© des gens formidables qui m'ont appris √©norm√©ment de nouvelles choses.
C'est √† cette √©poque que l'on m'a demand√© de cr√©er une application en suivant une architecture particuli√®re...
Et tout est devenu clair une fois que j'ai pratiqu√©.</p><p>D√©velopper avec la Clean Archi, c'est pour moi le r√©el aboutissement du d√©veloppement d'applications o√π les "parties" techniques peuvent enfin √™tre chang√©es sans pour autant devoir red√©velopper autre chose.
En r√©alit√©, j'ai appris beaucoup de choses avec la Clean Architecture:</p><ul><li>j'ai compris le r√©el atout qu'offrait l'Injection de d√©pendances ;</li><li>j'ai r√©ussi √† mieux appliquer SOLID que toutes les autres fois o√π j'ai tent√©, en vain ;</li><li>j'ai compris que je devais nommer mes interfaces ind√©pendamment de l'impl√©mentation qui pouvait en d√©couler puisque potentiellement, je pourrais avoir 3 impl√©mentations diff√©rentes d'un <code>IPdfGenerator</code> ;</li><li>j'ai compris que tester, c'√©tait amusant ;</li><li>j'ai compris que d√©velopper des applications sans bugs, c'√©tait possible et que √ßa devrait √™tre standard.</li></ul><p>Et j'ai √©tudi√© dans une √©cole IT! On m'a expliqu√© l'injection de d√©pendances, les principes SOLID, le clean code, comment pr√©parer le d√©veloppement d'une application et √©viter la majorit√© des bugs...
Mais ce n'est pas pour autant que je n'ai jamais √©crit de code horrible ou d'applications bugu√©es ou patch√© une fonctionnalit√© et cass√© quelque chose d'autre en passant.</p><p>Alors, je t'encourage grandement √† en apprendre plus sur les 3 sujets que j'ai mentionn√© plus t√¥t. Le reste devrait venir...
Ils repr√©sentent ce que j'adorerais appeler <em>le meilleur √©tat d'esprit</em> pour la g√©n√©ration suivante de d√©veloppeurs.</p><p>Je recommenderais aussi d'en apprendre plus en regardant aux ressources suivantes:</p><ul><li>La pr√©sentation de Guillherme Ferreira sur <a href="https://ndcporto.com/agenda/the-grand-unified-theory-of-clean-architecture-and-test-pyramid-0b9p/6537f85dc598" target="_blank" rel="noopener noreferrer">The Grand Unified Theory of Clean Architecture and Test Pyramid</a> √† la NDC Porto ;</li><li><a href="https://www.jug.ch/events/slides/220201_Optivem_TDD_and_Clean_Architecture_Driven_by_Behaviour.pdf" target="_blank" rel="noopener noreferrer">Les slides de Valentina Cupaƒá</a> sur TDD et la Clean Architecture par comportement ;</li><li>Un article de blog <a href="https://medium.com/codex/introduction-to-clean-architecture-2437c6987ec" target="_blank" rel="noopener noreferrer">introduisant √† la CA</a> ;</li><li>L'exemple d'une telle structure qu'est <a href="https://github.com/jasontaylordev/CleanArchitecture" target="_blank" rel="noopener noreferrer">la template Clean Architecture de Jason Taylor</a>!</li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="conclusion">Conclusion<a href="#conclusion" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h2><p>Ce qui fait finallement que l'architecture n-tier est obsol√®te, c'est le fait qu'elle est centr√©e <em>donn√©es</em> a contrario de la clean archi qui est centr√©e <em>domaine</em> (logique).
√áa nous a pris du temps de comprendre que ce qui donne de la valeur √† nos clients n'est pas les donn√©es mais bien la logique business qui permet de traiter ces donn√©es!</p><p>Si tu es toujours int√©ress√© pour en apprendre plus sur ce sujet, je suis tomb√© sur ces quelques ressources en ligne:</p><ul><li><a href="https://www.digitalocean.com/community/conceptual_articles/s-o-l-i-d-the-first-five-principles-of-object-oriented-design" target="_blank" rel="noopener noreferrer">Les explications de Samuel Oloruntoba</a> sur les principes SOLID ;</li><li>L'<a href="https://blog.ploeh.dk/2013/12/03/layers-onions-ports-adapters-its-all-the-same/" target="_blank" rel="noopener noreferrer">article de Mark Seemann</a> sur le sujet des adapteurs ;</li><li><a href="https://dev.to/seangwright/comment/ccfb" target="_blank" rel="noopener noreferrer">Le commentaire de Sean G. Wright</a> sur "Clean architecture - Your approach" ;</li><li>Le groupe MeetUp du <a href="https://www.meetup.com/fr-FR/software-craft-luxembourg/" target="_blank" rel="noopener noreferrer">Software Craftsmanship Luxembourg</a> ;</li><li>Le groupe MeetUp de la <a href="https://www.meetup.com/fr-FR/techexcellence/" target="_blank" rel="noopener noreferrer">Tech Excellence</a>.</li></ul><p>Et toi, quelle archi tu utilises pour tes projets?</p><div class="formContainer_ssZr"><h3>Reste √† jour, inscris-toi √† ma newsletter!</h3><div class="inputContainer_rIzC"><input type="email" class="input_xw7i" placeholder="Entre ton adresse email" required="" autocomplete="email"><a class="submit_jbGj tooltip" rel="noopener" type="submit"><svg aria-hidden="true" focusable="false" data-prefix="far" data-icon="paper-plane" class="svg-inline--fa fa-paper-plane fa-w-16" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path fill="currentColor" d="M440 6.5L24 246.4c-34.4 19.9-31.1 70.8 5.7 85.9L144 379.6V464c0 46.4 59.2 65.5 86.6 28.6l43.8-59.1 111.9 46.2c5.9 2.4 12.1 3.6 18.3 3.6 8.2 0 16.3-2.1 23.6-6.2 12.8-7.2 21.6-20 23.9-34.5l59.4-387.2c6.1-40.1-36.9-68.8-71.5-48.9zM192 464v-64.6l36.6 15.1L192 464zm212.6-28.7l-153.8-63.5L391 169.5c10.7-15.5-9.5-33.5-23.7-21.2L155.8 332.6 48 288 464 48l-59.4 387.3z"></path></svg><span class="tooltipText">Submit!</span></a></div></div>]]></content:encoded>
            <category>d√©veloppement</category>
            <category>structure</category>
            <category>architecture</category>
        </item>
        <item>
            <title><![CDATA[Les tests unitaires]]></title>
            <link>https://hunteroi.github.io/tinaeldevresse.eu/fr/blog/unit-testing</link>
            <guid>https://hunteroi.github.io/tinaeldevresse.eu/fr/blog/unit-testing</guid>
            <pubDate>Sat, 01 Jan 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[L'article du jour est fait en effort conjoint avec mon ancien coll√®gue et mentor <a href="https://www.linkedin.com/in/guillaumefaas/" target="_blank" rel="noreferrer noopener nofollow">Guillaume Faas</a> sous la forme d'une conversation entre 2 d√©veloppeurs. Joins-toi √† moi pour le remercier pour son incroyable implication dans l'√©criture de cet article! Nous esp√©rons tous les 2 que tu vas l'adorer, autant que nous avons ador√© l'√©crire!]]></description>
            <content:encoded><![CDATA[<a href="/tinaeldevresse.eu/fr/blog/unit-testing"><figure><img src="https://hunteroi.github.io/tinaeldevresse.eu/fr/img/unit-testing.jpg" alt="Tests unitaires" type="image"><figcaption class="legend_Ecw3"></figcaption></figure></a><p>L'article du jour est fait en effort conjoint avec mon ancien coll√®gue et mentor <a href="https://www.linkedin.com/in/guillaumefaas/" target="_blank" rel="noreferrer noopener nofollow">Guillaume Faas</a>
(üîπ) sous la forme d'une interview d'un d√©veloppeur.</p><p>Joins-toi √† moi pour le remercier pour son incroyable implication dans l'√©criture de cet article! Nous esp√©rons tous les deux que tu vas l'adorer, autant que nous avons ador√© l'√©crire.</p><hr><div class="center"><span class="italic">Un simple petit rappel: les opinions exprim√©es ici sont strictement les miennes. Elles ne repr√©sentent pas les opinions ou vues de mon employeur actuel ni aucun des pr√©c√©dents.</span></div><hr><p><em>tldr; fais des katas en appliquant la m√©thodologie "Test Driven Development" !</em></p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="presentation">Pr√©sentation<a href="#presentation" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h2><p>üî∏ Salut Guillaume! Tu sais te pr√©senter s'il te pla√Æt?</p><p>üîπ Salut Tina√´l! Merci de m'avoir invit√© √† parler sur ton site. Je m'appelle Guillaume Faas et je suis un expert .NET / Software Craftsman, actuellement employ√© chez <a href="https://squaremiled.com/" target="_blank" rel="noopener noreferrer">Squaremiled S.A.</a>.
Je d√©veloppe des logiciels depuis une dizaine d'ann√©es en ayant √©volu√© dans des environnements et secteurs d'activit√©s vari√©s.</p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="topic">Le sujet!<a href="#topic" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h2><p>üî∏ De quoi va-t-on parler aujourd'hui?</p><p>üîπ √Ä ton avis? Tu n'as pas lu le titre de l'article on dirait. On va parler de <strong>test unitaire</strong>!</p><p class="anchor anchorWithHideOnScrollNavbar_WYt5" id="first-encounter">üî∏ Quand est-ce que t'y as touch√© pour la premi√®re fois?<a href="#first-encounter" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></p><p>üîπ C'√©tait il y a bien longtemps, dans une galaxie lointaine... J'avais √† peine quelques ann√©es d'exp√©rience √† l'√©poque. J'√©tais dans la m√™me soci√©t√© pendant une majeure partie de ma carri√®re et, par rapport √† mon <em>day-to-day</em>, je pensais que j'avais d√©j√† tout vu.
Je commen√ßais √† regarder en ligne √† des <em>guidelines</em>, des <em>best practices</em>, des <em>patterns</em>, etc. Je suis tomb√© sur plein de sujets excitants et surtout nouveaux.
C'√©tait comme si j'avais mis les pieds dans un nouveau monde qui n'avait rien √† voir avec la routine dans laquelle j'√©tais ancr√©. Le <em>testing</em> √©tait √©videmment l'un de ces sujets.
Cependant, j'ai vite r√©alis√© que je devais progresser sur d'autres sujets avant d'√™tre capable d'introduire des tests. Cela m'a pris du temps avant que je ne sois vraiment apte √† travailler avec une approche <em>test-driven</em>.</p><p class="anchor anchorWithHideOnScrollNavbar_WYt5" id="what-is-it">üî∏ Ok! Par contre, histoire de ne pas perdre les lecteurs... tu sais expliquer ce qu'est un test unitaire s'il te pla√Æt?<a href="#what-is-it" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></p><p>üîπ Oui, bien s√ªr! Un test unitaire, c'est un test qui v√©rifie un <em>unit of code</em>. La notion de <em>unit of code</em> varie en fonction des √©coles de testing.
L'√©cole London (ou Mockist) va voir cela comme le plus petit <em>chunk of code</em>, on parlera d'une classe ou d'une m√©thode. Par contre, l'√©cole Detroit (ou Classicist) va voir cela comme un <em>behavior</em>, donc un ensemble de classes ou de m√©thodes.
Pour les plus curieux, voici un <a href="https://medium.com/@adrianbooth/test-driven-development-wars-detroit-vs-london-classicist-vs-mockist-9956c78ae95f" target="_blank" rel="noopener noreferrer">article</a> qui d√©taille les diff√©rences entre les deux √©coles.
Je pr√©cise qu'une √©cole n'est pas meilleure que l'autre, chacune a ses avantages et inconv√©nients. C'est une histoire de pr√©f√©rence et de compromis.
La diff√©rence principale tient surtout de la taille de ton <em>System Under Test</em> (SUT) et de la relation entre les diff√©rents collaborateurs.</p><p>Mais √† la fin, un test unitaire est simplement <strong>un morceau de code qui valide qu'un autre morceau de code a le r√©sultat et/ou <em>side effect</em> attendu par rapport √† un sc√©nario donn√©</strong>.</p><p class="anchor anchorWithHideOnScrollNavbar_WYt5" id="hierarchy-position">üî∏ D'accord, mais √ßa se situe o√π dans la "hi√©rachie des tests"?<a href="#hierarchy-position" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></p><p>üîπ Il s'agit de la pyramide de testing (<em>Agile Testing Pyramid</em>) mais de gauche √† droite au lieu de bas en haut. Plus tu seras situ√© vers la gauche, plus ton <em>scope</em> est petit et plus tes tests seront nombreux et rapides. La logique inverse est appliqu√©e lorsque tu vas dans l'autre sens.</p><p>Nous, on se situe sur la partie "unit" puisque techniquement, il n'y a pas plus petit qu'une <em>unit</em>. Un test unitaire doit √™tre ex√©cut√© de fa√ßon <em>standalone</em> dans un environnement <em>sandbox</em>.
C'est-√†-dire qu'un test unitaire n'a aucun impact sur l'ext√©rieur du test, et si tu en lances plusieurs en parall√®le, ils ne doivent pas avoir de <em>side effects</em> entre eux.</p><p>Cela signifie donc que dans un test unitaire: on ne contacte pas de DB, on √©vite de faire une requ√™te HTTP, d'acc√©der √† un fichier du syst√®me, etc. De la m√™me fa√ßon, on ne va pas contacter les autres d√©pendances de la solution.
On reste vraiment "interne" √† la fonction.</p><figure><img src="https://hunteroi.github.io/tinaeldevresse.eu/fr/img/software-testing-types.png" alt="Types de Software Testing" type="image"><figcaption class="legend_Ecw3"></figcaption></figure><p>Voici quelques points de la partie <em>functional testing</em>:</p><ul><li>l'<em>unit testing</em>, c'est v√©rifier qu'un composant fonctionne bien. Il s'agit du test le plus rapide, on parlera de <em>fast feedback loop</em> ;</li><li>l'<em>integration testing</em>, c'est v√©rifier que plusieurs composants fonctionnent bien entre eux ;</li><li>le <em>user acceptance testing</em> qui consiste √† v√©rifier l'enti√®ret√© de l'application tout en √©vitant de contacter les d√©pendances externes (ex: des requ√™tes vers des fournisseurs de donn√©es ext√©rieurs √† ton application).
Il s'agit du test le plus repr√©sentatif, probablement celui qui a le plus de valeur √† l'√©chelle du produit car il v√©rifie des <em>business requirements</em>.</li></ul><p>√Ä noter qu'il n'y a pas d'obligation de tous les impl√©menter. On pourrait tr√®s bien avoir une <em>test suite</em> compos√©e uniquement de tests d'une seule de ces cat√©gories. Mais il convient de garder √† l'esprit que notre <em>test suite</em> ne sera pas des plus efficaces.</p><p>üî∏ D'accord! Mais pourquoi le testing, c'est pas r√©alis√© dans le monde professionnel?</p><p>üîπ En r√©alit√©, une grande partie des d√©veloppeurs n'√©crivent pas ou peu de tests. De plus, les tests d'int√©grations sont moins r√©pandus que les tests unitaires car ils sont plus complexes √† √©crire. Au final, cette t√¢che est souvent vue comme une corv√©e ou alors une <em>extra step</em> que l'on fera uniquement si on a le temps.</p><figure><img src="https://hunteroi.github.iohttps://media1.giphy.com/media/VXmWbcDSj2yqnsXUrF/giphy.gif" alt="GIF sur les tests d'int√©gration" type="image"><figcaption class="legend_Ecw3"></figcaption></figure><p>Uncle Bob en a √©galement parl√© √† une conf√©rence √† Londre en 2018:</p><figure><div class="container_KXSz"><iframe type="html" width="560" height="315" src="https://hunteroi.github.iohttps://www.youtube.com/embed/17vTLSkXTOo?start=552&amp;end=720" title="YouTube video player of SC London Conference 2018" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div><figcaption class="legend_Ecw3"></figcaption></figure><p class="anchor anchorWithHideOnScrollNavbar_WYt5" id="objective">üî∏ C'est quoi le but du testing unitaire et quand est-ce que √ßa devrait √™tre appliqu√©?<a href="#objective" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></p><p>üîπ Le but est assez simple: c'est de montrer qu'une m√©thode fonctionne comme tu l'attends. C'est-√†-dire que tu vas avoir un comportement attendu, par exemple ta m√©thode <code>getSomething</code> doit te retourner quelque chose. Tu vas donc tester diff√©rents sc√©narios et v√©rifier qu'elle se comporte toujours de la bonne fa√ßon.</p><p>Pour ce qui est du "quand", c'est encore plus simple: √ßa doit √™tre appliqu√© √† partir du moment o√π tu as de la logique quelque part.</p><p class="anchor anchorWithHideOnScrollNavbar_WYt5" id="pros-and-cons">üî∏ Bah du coup, quels en sont les avantages et inconv√©nients de la mise en place de tests unitaires?<a href="#pros-and-cons" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></p><p>üîπ Comme dit pr√©c√©demment, tu √©cris du code qui teste du code. Vu comme cela, on dirait surtout une charge de travail suppl√©mentaire sauf qu'il existe de r√©els int√©r√™ts derri√®re.</p><ol><li>Le test unitaire sert de <strong>filet de s√©curit√© contre les r√©gressions</strong>.</li></ol><p>L'√©tape du refactoring intervient syst√©matiquement dans un projet. Le probl√®me √©tant qu'√† partir du moment o√π l'on modifie quelque chose, il y a un risque de <strong>r√©gression</strong>. On parle de r√©gression lorsque quelque chose fonctionnait auparavant et ne fonctionne plus suite √† un changement.
C'est pr√©cisement ici que le test intervient: il permet de garantir que tes composants fonctionnent toujours comme attendu. Si jamais quelque chose ne fonctionne plus suite √† un changement, la <em>test suite</em> t'affichera les tests qui ont d√©tect√© un probl√®me avec un beau rond rouge. Et √ßa, du point de vue d'un d√©veloppeur, c'est √©norme! Cela veut dire que tu es beaucoup plus serein et que tu passes bien moins de temps √† v√©rifier que tes changements n'ont pas eu d'effets ind√©sirables sur le reste des fonctionnalit√©s.</p><ol start="2"><li>L'√©criture de tests am√©liore la <strong>qualit√© du code</strong> de ton application.</li></ol><p>C'est li√© √† ce dont on vient d'aborder. Il est probable que les lecteurs aient d√©j√† rencontr√© une situation similaire: lorsque l'on parle de refactoring √† un <em>Product Owner</em> ou <em>Product Manager</em>, la premi√®re crainte est toujours que quelque chose ne fonctionne plus.
Si tu es couvert par une <em>test suite</em>, tu n'as pas peur du refactoring. C'est m√™me l'inverse, tu es <strong>encourag√© √† faire du refactoring r√©guli√®rement</strong> tout en √©tant prot√©g√©.</p><ol start="3"><li>Une suite de tests devient ce qu'on appelle une <strong>living documentation</strong>.</li></ol><p>Lorsque l'on parle de documentation, on a tous √† l'esprit des commentaires. Le probl√®me est qu'ils ne sont jamais √† jour avec le reste du code. Le code √©volue, la documentation non. Par contre, ton test unitaire sera toujours <em>up-to-date</em>. Si ce n'est pas le cas, alors ta suite de tests ne te donnera pas le feu vert pour aller plus loin.</p><p>C'est d'autant plus int√©ressant dans le cadre d'une arriv√©e d'un nouveau d√©veloppeur sur le projet. Plut√¥t que de lire tout le code d'une m√©thode pour savoir ce qu'elle fait, il lui suffit de regarder les diff√©rents tests de cette m√©thode. Chaque comportement sera repr√©sent√© par un test avec un <em>naming</em> explicite sur le sc√©nario et r√©sultat attendu (ex: <code>GetItem_ShouldReturnNotFoundResult_GivenItemIsMissing</code>). <strong>√áa facilite donc l'<em>onboarding</em>!</strong></p><ol start="4"><li>Cela <strong>r√©duit le temps de d√©tection des bugs</strong>.</li></ol><p>On a √©voqu√© le terme <em>short feedback loop</em> un peu plus t√¥t dans la discussion. Les tests unitaires sont tr√®s rapides √† ex√©cuter, ils nous donnent un <em>feedback</em> presque instantan√© sur la sant√© de la solution. Cela veut dire que l'on doit les ex√©cuter r√©guli√®rement. Je sch√©matise mais on a un bouton (ou un raccourci) qui nous donne un statut Vert/Rouge en quelques secondes. Actionner ce bouton doit devenir quelque chose de syst√©matique.
Cela a d√©j√† un int√©r√™t pour nous en tant que d√©veloppeurs mais ce n'est pas tout. On en parlera un peu plus tard!</p><ol start="5"><li>Ce n'est pas un avantage direct mais plut√¥t un effet secondaire: <strong>faire du testing te rend meilleur</strong>.</li></ol><p>Pour faire en sorte que tu puisses √©crire des tests apportant une r√©elle valeur, tu dois respecter certains principes. Tu dois toujours avoir une certaine couche d'abstraction pour <em>mocker</em> tes d√©pendances, tu dois pouvoir les injecter, tu dois limiter les responsabilit√©s de tes composants, etc... en fait tu vas te forcer √† appliquer plusieurs principes r√©guli√®rement (SOLID par exemple).
Du coup, cela te force √† casser tes composants, √† les d√©coupler, √† penser √† leurs interations et responsabilit√©s. Bref, √† r√©fl√©chir et √† te poser beaucoup de questions. Mine de rien, on parle de <em>code design</em>! Et donc, action-r√©action: tu deviens meilleur au fil du temps. Cela fait tr√®s <em>Happy End</em> mais tu vois o√π je veux en venir.</p><p>üî∏ Et comme c'est peu mis en place dans les entreprises, c'est vu comme "nouveau" et √ßa motive √† en apprendre plus!</p><p>üîπ Je te rejoins sur l'aspect nouveaut√© mais il reste surtout pr√©sent au d√©but lorsqu'on d√©couvre le sujet. Mais il y a une partie d'interpr√©tation dans tout cela: certains (comme toi) le voient comme quelque chose d'int√©ressant, d'autres le voient comme une corv√©e ou une pression suppl√©mentaire. Tu trouveras toujours des personnes r√©fractaires aux tests pour des raisons diverses et vari√©es. Peut-√™tre qu'on aura l'occasion d'aborder les raisons qui sont g√©n√©ralement √©voqu√©es.</p><p>Pour revenir √† ta question, voici les inconv√©nients qui me viennent √† l'esprit:</p><ol><li>On l'a mentionn√©, il y a des pr√©-requis: il faut comprendre les piliers de l'orient√© objet, l'injection de d√©pendances, les principes <a href="https://www.digitalocean.com/community/conceptual_articles/s-o-l-i-d-the-first-five-principles-of-object-oriented-design" target="_blank" rel="noopener noreferrer">SOLID</a>, etc.</li><li>Le fait que l'on trouve peu de projets avec de r√©elles <em>test suites</em> rend l'apprentissage moins accessible. Il en va de m√™me pour trouver un coach passionn√© par ce sujet.</li><li>Il y a une courbe d'apprentissage/de progression assez importante. Tout le monde passe par une phase de frustration au d√©but parce que l'on est pas √† l'aise et on a l'impression d'√™tre plus lent. Il faut r√©sister et pers√©v√©rer car les tests nous feront en r√©alit√© aller plus vite. On en parlera avec l'approche TDD.</li><li>Cela demande de la pr√©paration : il faut r√©fl√©chir √† l'architecture du projet, aux relations entre les diff√©rents composants, etc... Vu comme cela, ce n'est pas vraiment un inconv√©nient mais on ne peut pas (plus?) se lancer t√™te baiss√©e dans un d√©veloppement sans un minimum de r√©flexion.</li><li>Il y a un manque de compr√©hension du c√¥t√© des autres √©quipes intervenant sur le d√©veloppement du produit, notamment non-IT. On retombe toujours sur des discussions sur le <em>Return On Investement</em> (ROI) ou l'impact sur la v√©locit√©.</li></ol><p>On entend souvent dire que "cela prend du temps et que cela sera planifi√© plus tard" ou que "les d√©veloppeurs n'ont pas le temps" mais ces arguments ne sont pas vraiment valables.
En effet, le premier indique clairement un manque de vision et de compr√©hension du testing. D√©j√† parce que "plus tard" n'arrive jamais. Mais surtout, faire les tests √† la fin du d√©veloppement n'a aucun sens. On perd tous les avantages qu'apporte le testing. Je l'ai d√©j√† dit mais on en parlera avec l'approche TDD.
Ensuite, le second indique un probl√®me d'organisation. Les tests devraient √™tre inclus dans les estimations et pas comme un travail suppl√©mentaire √† r√©aliser.</p><p class="anchor anchorWithHideOnScrollNavbar_WYt5" id="test-coverage">üî∏ Et le <span style="font-style:italic">test coverage</span>, dans tout √ßa?<a href="#test-coverage" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></p><p>üîπ Tester, c'est super et on ressent les b√©n√©fices. Cependant, il faut aussi faire un statut sur l'√©tat de la <em>test suite</em>. C'est l√† qu'on arrive sur le <em>code coverage</em>. C'est une m√©trique informative sur la progression de couverture de tests de ton application.
J'insiste vraiment sur le c√¥t√© <strong>informatif</strong>. Ce serait une erreur de mesurer la qualit√© de la suite de tests sur base de sa couverture. C'est une m√©trique de quantit√© et non de qualit√©.
J'ai d√©j√† lu des articles sur des soci√©t√©s qui ont int√©gr√© la valeur de <em>code coverage</em> dans les objectifs des d√©veloppeurs et cela a incit√© les d√©veloppeurs √† utiliser de faux tests pour faire gonfler le coverage.</p><p>Le seul moyen de v√©rifier la qualit√© d'une <em>test suite</em> d'un projet, c'est de se poser quelques questions:</p><ul><li>Est-ce que le temps de d√©veloppement g√©n√©ral des fonctionnalit√©s reste approximativement le m√™me avec le temps?</li><li>Est-ce que la quantit√© de bugs trouv√©s en production diminue avec le temps?</li><li>Est-ce que tu arrives √† facilement accueillir une nouvelle ressource au sein de l'√©quipe de d√©veloppement?</li><li>Est-ce que les d√©veloppeurs ont confiance en leur <em>test suite</em>? Est-ce qu'elle est repr√©sentative de l'√©tat de sant√© de la solution? Est-ce qu'un rond vert garantit vraiment qu'un composant fonctionne?</li></ul><p>Si tu es en mesure de r√©pondre "oui" √† toutes ces questions, f√©licitations! Tu peux √™tre fier de la <em>test suite</em> que tu as mis en place.
Le souci? C'est difficile d'avoir une r√©ponse √† ces questions alors que tu dois rendre des comptes <em>day one</em>... Tu remarques d'ailleurs que les trois premi√®res font r√©f√©rence au <strong>temps</strong>.</p><p class="anchor anchorWithHideOnScrollNavbar_WYt5" id="cost">üî∏ Bon sinon... question co√ªt, qu'est-ce qu'il en est? Parce que finalement, √©crire un test unitaire, c'est tout de m√™me √©crire du code. √áa co√ªte!<a href="#cost" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></p><p>üîπ Je vois l√† o√π tu veux en venir. Non, cela ne co√ªte pas plus sauf si tu factures au caract√®re!
M√™me si tu √©cris plus de code, tu es vraiment gagnant et pas que sur l'aspect temps. Je t'ai dit qu'on devait parler de TDD? Parce que cela te fait m√™me gagner du temps √† court-terme. Bref.
D√©velopper une fonctionnalit√© peut te prendre un peu plus de temps en sachant que cela d√©pendra surtout de ton aisance avec l'√©criture de tests. D'un autre c√¥t√©, cela va surtout te "sauver la vie" pas mal de fois parce que tu vas √©viter √©normement de bugs qui, en temps normal,
seraient arriv√©s bien plus tard dans ton <em>process</em>, lors des tests utilisateur sur un environnement de QA ou en production.
Toi qui voulais parler d'argent, <strong>plus un bug est d√©couvert tard, plus il co√ªte cher</strong>:</p><figure><a href="https://deepsource.io/blog/exponential-cost-of-fixing-bugs/" target="_blank"><img src="https://hunteroi.github.iohttps://assets.deepsource.io/995f56d/images/blog/cost-of-fixing-bugs/chart.jpg" alt="Co√ªt de correction des bugs" type="image" url="https://deepsource.io/blog/exponential-cost-of-fixing-bugs/"></a><figcaption class="legend_Ecw3">Le co√ªt de correction d'un bug sur base du moment o√π il a √©t√© d√©tect√©, sourc√© chez<!-- --> <a href="https://deepsource.io/blog/exponential-cost-of-fixing-bugs/" target="_blank" rel="noopener noreferrer">DeepSource</a>!</figcaption></figure><p>Et c'est tout √† fait normal.</p><p>On peut reparler de la <em>fast feedback loop</em>: si un bug est d√©couvert par un test unitaire, c'est en local sur ta machine, juste apr√®s le changement (n'oublie pas de <em>rebuild</em> et de <em>rerun</em> ta suite de tests). Il est identifi√© rapidement et corrig√© rapidement.
√Ä contrario, un bug qui passe en production... il est d√©couvert par un utilisateur qui remonte le probl√®me √† ta <em>product team</em> qui elle doit analyser le <em>feedback</em> et ouvrir un ticket dans ton <em>backlog</em>. Ce ticket, il va √™tre prioris√© par ton <em>Product Owner</em> pour √™tre inclus dans la prochaine it√©ration puis il sera assign√© √† un d√©veloppeur. En admettant que ce ne soit pas toi, il y aura une phase d'investigation (reproduction du bug), une phase de correction de bug et apr√®s il doit repartir sur tous les environnements et √™tre valid√© par des <em>Quality Assurance Users</em>.</p><p>J'ai volontairement pris un cas extr√™me pour montrer le pire sc√©nario mais c'est aussi la fa√ßon d'√™tre le plus explicite sur le probl√®me.
Ce qu'il est important de retenir, c'est qu'un test peut faire gagner beaucoup de temps √† beaucoup de personnes, aussi simple soit-il.</p><p><em>ndlr: pour en savoir plus sur les raisons qui font qu'un logiciel a des bugs, n'h√©sitez pas √† consulter <a href="https://www.softwaretestinghelp.com/why-does-software-have-bugs" target="_blank" rel="noopener noreferrer">cette page</a> et <a href="https://www.google.com/search?q=why+do+softwares+have+bugs" target="_blank" rel="noopener noreferrer">d'autres sur le web</a>!</em></p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="details">En d√©tails<a href="#details" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h2><p class="anchor anchorWithHideOnScrollNavbar_WYt5" id="black-and-white-boxes">üî∏ Ok! Et si on parlait maintenant de<!-- --> <span style="font-style:italic">black box</span> et<!-- --> <span style="font-style:italic">white box testing</span>?<a href="#black-and-white-boxes" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></p><p>üîπ J'aime les sch√©mas, tu aimes les sch√©mas? C'est bien les sch√©mas!</p><figure><img src="https://hunteroi.github.io/tinaeldevresse.eu/fr/img/black-white-box-testing.png" alt="Black and white box testing" type="image" style="border:.5em solid black"><figcaption class="legend_Ecw3">Les diff√©rences entre <span style="font-style:italic">black box</span> <!-- -->et <span style="font-style:italic">white box testing</span></figcaption></figure><p>Le <strong>black box testing</strong>, c'est donner une information d'entr√©e au SUT et v√©rifier l'information de sortie. C'est aussi simple que √ßa: on ne prend pas en compte ce qu'il se passe √† l'int√©rieur de la m√©thode.
Il y a un cas pr√©cis o√π ce type de testing sera obligatoire: les m√©thodes pures. Ces m√©thodes n'ayant aucune d√©pendance ou variables partag√©es, elles n'ont donc aucun <em>side effect</em>. Le <strong>black box testing</strong> est donc une √©vidence mais cela rend aussi le test extr√™mement robuste car rien ne vient impacter le r√©sultat du test.</p><p>Prenons par exemple une m√©thode <code>Sum</code> d'une classe <code>Calculator</code>. On est exactement sur le sc√©nario mentionn√© plus haut:</p><div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">tests/CalculatorTests.cs</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">[</span><span class="token attribute class-name">TestClass</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">CalculatorTests</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">[</span><span class="token attribute class-name">TestMethod</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token return-type class-name keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Sum_Should_ReturnTheSumOfTheTwoNumbers</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token class-name">Calculator</span><span class="token plain"> calculator </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token class-name keyword" style="color:#00009f">int</span><span class="token plain"> result </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> calculator</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Assert</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">AreEqual</span><span class="token punctuation" style="color:#393A34">(</span><span class="token named-parameter punctuation" style="color:#393A34">expected</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">5</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token named-parameter punctuation" style="color:#393A34">actual</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> result</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier dans le presse-papier" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>On ne conna√Æt pas l'impl√©mentation de la m√©thode, mais on a √©crit un test. On lui donne des valeurs en entr√©e, et on v√©rifie la valeur de sortie.
Pour le reste des sc√©narios, je trouve dommage de s'arr√™ter l√†. C'est une pr√©f√©rence personnelle, je trouve le <strong>white box testing</strong> plus pertinent en tant que <em>Mockist</em>.</p><p>De l'autre c√¥t√©, on a donc ce <strong>white box testing</strong>. √Ä premi√®re vue, c'est la m√™me chose: on donne un <em>input</em> et on v√©rifie l'<em>output</em>. Mais on va aussi v√©rifier ce qu'il se passe √† l'int√©rieur du SUT.
On peut donc v√©rifier que le SUT a bien fait appel √† sa d√©pendance, que la valeur a bien √©t√© mise dans un cache, sauvegard√©e dans un repo, qu'un event a bien √©t√© √©mis, etc.
Cela nous permet de v√©rifier chaque <em>behavior</em> avec ses <em>side effects</em>.</p><p class="anchor anchorWithHideOnScrollNavbar_WYt5" id="how-to-write">üî∏ La question que tous se posent... Comment √©crire de bons tests unitaires?<a href="#how-to-write" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></p><p>üîπ Je ne pense pas qu'il y ait de bons ou de mauvais tests unitaires... Evidemment que si!
Il faut r√©fl√©chir avant sur ce que tu veux faire. √áa peut para√Ætre b√™te dit comme √ßa mais <em>think before you do</em>. C'est que j'expliquais lorsque je parlais du fait que faire des tests te rend meilleur.
Si tu veux faire des tests efficaces, il faut r√©fl√©chir sur la fa√ßon dont tes composants vont communiquer entre eux. En fait, tes tests seront efficaces √† partir du moment o√π ils seront faciles √† faire. Et si tu te rends compte qu'ils ne le sont pas, c'est qu'il y a un soucis dans ton code.</p><p>Exemple: j'ai un <em>service</em> qui doit cr√©er un utilisateur. <strong>Avant d'√©crire mon test</strong>, je dois me poser quelques questions: quelles sont les responsabilit√©s de mon service?
Est-il responsable d'envoyer une requ√™te HTTP √† un fournisseur externe pour r√©cup√©rer des informations? Est-il responsable de la persistence en base de donn√©es? Est-il responsable du <em>logging</em>?
<em>Divide <!-- -->&amp;<!-- --> Conquer</em>: une d√©pendance ici, une l√†, et une autre l√†... Au final, que reste-t-il dans mon service? L'orchestration d'un processus d√©l√©gu√© √† diff√©rentes d√©pendances (ex: client http, repository, logger, etc) et √©ventuellement une modification de l'√©tat d'une entit√©. C'est tout.</p><p>Au final, un "bon" test doit:</p><ul><li>te prot√©ger contre les r√©gressions ;</li><li>√™tre r√©sistant au refactoring ;</li><li>te donner un feedback rapide ;</li><li>√™tre maintenable.</li></ul><p class="anchor anchorWithHideOnScrollNavbar_WYt5" id="tips-to-start">üî∏ Et, sinon... T'as des conseils pour se lancer dans le testing unitaire?<a href="#tips-to-start" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></p><p>üîπ Je recommande aux personnes qui veulent d√©marrer le testing de commencer directement avec le <em>Test Driven Development</em>.
Si le test est √©crit apr√®s l'impl√©mentation, c'est pas vraiment objectif car tu connais d√©j√† l'impl√©mentation donc ton test est fortement li√© √† ton impl√©mentation. De plus, le code fonctionne d√©j√† donc le test sera per√ßu comme une perte de temps. Mais surtout: on a b√©n√©fici√© d'aucun avantage du testing lors de la phase d'impl√©mentation.</p><p>Pour cela, vous n'√™tes pas seul. Il existe des tonnes de resources disponibles pour vous aider.
Voici plusieurs livres que j'aurais aim√© avoir lus au d√©but de ma carri√®re:</p><ul><li>"Test Driven Development - By Example" par Kent Beck.</li><li>"Unit Testing - Principles, Practices and Patterns" par Vladimir Khorikov.</li></ul><p>√âgalement, voici un site rempli de conseils et astuces sur TDD avec un grand nombre de katas pour progresser: <a href="http://www.tddbuddy.com/" target="_blank" rel="noopener noreferrer">TDD Buddy</a>.</p><p>En parlant de katas, faites des katas. Faites pleins de katas et faites en √† plusieurs (<em>pair</em> et/ou <em>mob programming</em>) si vous en avez la possibilit√©. C'est fun et c'est tr√®s formatteur, notamment sur le fait de d√©marrer avec des exercices simples et progressivement augmenter la difficult√© jusqu'√† se retrouver avec des situations similaires √† ce que l'on peut trouver dans des projets r√©els. En plus de <a href="http://www.tddbuddy.com/" target="_blank" rel="noopener noreferrer">TDD Buddy</a>, je pourrais recommander <a href="https://www.codewars.com/" target="_blank" rel="noopener noreferrer">Code Wars</a> si vous √™tes en manque d'inspiration.
Sans forc√©ment faire de l'auto-promotion, vous pouvez aussi trouver quelques katas sur mon <a href="https://github.com/Tr00d/" target="_blank" rel="noopener noreferrer">GitHub</a>.</p><p>Un dernier conseil pour d√©marrer le testing, on peut se r√©f√©rer √† ce qu'on appelle le triple A (AAA), qui signifie <em>Arrange, Act, Assert</em>, pour rendre les tests plus clairs et organis√©s. Le but est de diviser son test unitaire en 3 parties distinctes:</p><ol><li><em>arrange</em> : c'est le sc√©nario, la partie o√π tu pr√©pares les donn√©es <em>input</em> de ta m√©thode ;</li><li><em>act</em> : c'est l'action, le fait de r√©aliser l'appel √† la m√©thode que tu vas tester ;</li><li><em>assert</em> : c'est la v√©rification du <em>behavior</em>, l√† partie o√π tu v√©rifies l'<em>output</em> ou les <em>side effects</em>.</li></ol><p class="anchor anchorWithHideOnScrollNavbar_WYt5" id="bad-smells">üî∏ Quels sont les "bad smells" dans l'unit testing?<a href="#bad-smells" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></p><p>üîπ J'en vois quelques-uns...</p><ul><li>une partie <em>arrange</em> qui fait 15 lignes... C'est trop compliqu√©. On voit clairement que la m√©thode test√©e fait trop de choses car le sc√©nario est trop compliqu√© √† mettre en place!</li><li>On dit qu'<strong>un test ne doit avoir qu'une et une seule raison d'√©chouer</strong>. Un test ne devrait contenir qu'un seul <em>assert</em>.</li><li>Le fait que tu aies du mal √† √©crire des tests unitaires, non pas √† cause du fait que tu n'aies pas la connaissance n√©cessaire mais plut√¥t en rapport au code √† tester... c'est qu'il y a un soucis au niveau de ton composant. Alors, prends du recul et penses aux responsabilit√©s.</li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="more-stuff">Pour aller plus loin<a href="#more-stuff" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h2><p class="anchor anchorWithHideOnScrollNavbar_WYt5" id="libraries">üî∏ Tu as des librairies int√©ressantes en t√™te pour faciliter le travail?<a href="#libraries" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></p><p>üîπ Oui. Pour moi, on peut consid√©rer trois groupes de librairies:</p><ol><li>les librairies de testing qui permettent de g√©n√©rer des tests ;</li><li>les librairies de mocking qui permettent de surcharger le comportement de tes d√©pendances et de les monitorer ;</li><li>les librairies de g√©n√©ration de donn√©es.</li></ol><p>Pour ma part:</p><table><thead><tr><th align="center"><strong>Frameworks de test</strong></th><th align="center"><strong>Librairies de mocking</strong></th><th align="center"><strong>Librairies de g√©n√©ration de donn√©es</strong></th></tr></thead><tbody><tr><td align="center"><a href="https://www.nuget.org/packages/MSTest.TestFramework/" target="_blank" rel="noopener noreferrer">MSTest</a></td><td align="center"><a href="https://www.nuget.org/packages/Moq/" target="_blank" rel="noopener noreferrer">Moq</a></td><td align="center"><a href="https://www.nuget.org/packages/AutoFixture/" target="_blank" rel="noopener noreferrer">AutoFixture</a></td></tr><tr><td align="center"><a href="https://www.nuget.org/packages/NUnit/" target="_blank" rel="noopener noreferrer">NUnit</a></td><td align="center"><a href="https://www.nuget.org/packages/Ninject/" target="_blank" rel="noopener noreferrer">NInject</a></td><td align="center"></td></tr><tr><td align="center"><a href="https://www.nuget.org/packages/xunit/" target="_blank" rel="noopener noreferrer">XUnit</a></td><td align="center"><a href="https://www.nuget.org/packages/WireMock.Net/" target="_blank" rel="noopener noreferrer">WireMock</a></td><td align="center"></td></tr></tbody></table><p>üî∏ Sur ce point-ci particuli√®rement, j'aimerais mettre en avant le fait qu'il existe aussi des librairies de test pour le <em>front-end</em>. En fait, le testing unitaire n'est pas r√©serv√© aux d√©veloppeurs
<em>back-end</em>. On citera notamment <a href="https://www.npmjs.com/package/jest" target="_blank" rel="noopener noreferrer">Jest</a>, <a href="https://www.npmjs.com/package/mocha" target="_blank" rel="noopener noreferrer">Mocha</a>, <a href="https://www.npmjs.com/package/cypress" target="_blank" rel="noopener noreferrer">Cypress</a> et <a href="https://www.npmjs.com/package/jasmine" target="_blank" rel="noopener noreferrer">Jasmine</a> comme librairies fortement li√©es au testing dans des applications JavaScript.</p><p class="anchor anchorWithHideOnScrollNavbar_WYt5" id="what-is-tdd">Du coup, tu n'arr√™tes pas d'en parler. C'est quoi le<!-- --> <span style="font-style:italic">Test Driven Development</span> (TDD)?<a href="#what-is-tdd" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></p><p>üîπ Je suis content que tu poses enfin la question! C'est pas comme si je t'avais tendu la perche plus d'une fois... C'est la joie, le bonheur, la r√©ponse ultime au sens de la vie, c'est tout √ßa!
Non, je rigole. En fait, c'est une fa√ßon de mettre les tests au centre de ce que tu fais. On a parl√© de tous les points positifs de faire des tests unitaires et aussi du fait qu'on les perdait si on faisait les tests √† la fin sans forc√©ment aller dans le d√©tail.
En fait, la meilleure fa√ßon de b√©n√©ficier des avantages des tests, c'est de les faire en premier mais ce n'est pas que √ßa. Ce n'est pas d'abord faire tous les tests puis ensuite faire l'impl√©mentation.
Non, il y vraiment un aspect it√©ratif que l'on retrouve d'ailleurs dans l'Agilit√©. Tu y vas √©tape par √©tape (<em>baby steps</em>), tu ajoutes de nouveaux <em>behaviors</em> en garantissant que ceux pr√©c√©demment ajout√©s fonctionnent toujours. Le filet de s√©curit√© s'agrandit petit √† petit naturellement.
On peut pr√©senter cela diff√©remment: imaginons une √©chelle. Cela sera toujours plus facile de la monter marche par marche que de les monter trois par trois.</p><p>J'ajouterais que contrairement aux id√©es re√ßues, TDD ne rend pas la dur√©e de d√©veloppement plus longue, bien au contraire. Par exemple, il n'est pas n√©cessaire d'ex√©cuter la solution pour savoir que le code fonctionne car il a enti√®rement √©t√© d√©velopp√© sur base de tests.</p><figure><img src="https://hunteroi.github.io/tinaeldevresse.eu/fr/img/test-driven-development.png" alt="Cycle du TDD" type="image" style="border:.5em solid black"><figcaption class="legend_Ecw3">Le cycle de d√©veloppement sous TDD</figcaption></figure><p>La premi√®re √©tape, c'est l'√©criture d'<strong>un</strong> test unitaire. Normalement, ce test doit <em>obligatoirement</em> √©chouer puisqu'aucune impl√©mentation n'a √©t√© √©crite pour qu'il r√©ussise.
L'√©tape suivante, c'est donc d'√©crire le code qui permet de faire passer le test au vert. Et l√†, c'est tr√®s important de savoir que ce passage de rouge vers le vert doit √™tre <strong>le plus court possible</strong>. C'est le moment o√π on √† le droit d'√©crire du code "moche", d'<em>hardcoder</em> un r√©sultat, de dupliquer, de coller une r√©ponse de StackOverflow, etc. Cela peut para√Ætre bizarre au d√©but mais il y a un vrai int√©r√™t: v√©rifier que l'ajout d'un nouveau <em>behavior</em> est possible sans casser tout ce qui a √©t√© fait auparavant.
L'√©tape suivante, c'est le refactoring. On a fait un code horrible, il faut maintenant faire quelque chose de propre. J'ai parl√© plus t√¥t de refactoring plus simple et s√©curis√©: on y est! On a notre <em>green light</em> et le <em>behavior</em> est garanti tant que cette <em>light</em> reste <em>green</em>. On a notre <em>fast feedback loop</em> √† port√©e de main (ou de clic, ou de raccourci) pour savoir si tout est ok. Tu me suis?
Ensuite, on atteint la fin du cycle. Cela veut dire une chose: on recommence.</p><p>üî∏ Je vais fournir un petit exemple pour que tout le monde se situe! Je vais faire √ßa avec un calculateur de longueur de cha√Æne de caract√®res tiens, c'est simple √† r√©aliser.
Donc, je commence par √©crire le test unitaire:</p><div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">tests/StringCalculatorTests.cs</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">[</span><span class="token attribute class-name">TestClass</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">StringCalculatorTests</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">[</span><span class="token attribute class-name">TestMethod</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token return-type class-name keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Length_ShouldReturn_CorrectLength</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token class-name">StringCalculator</span><span class="token plain"> calculator </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token class-name keyword" style="color:#00009f">int</span><span class="token plain"> result </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> calculator</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Length</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"string"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// "string" fait 6 caract√®res de long, non?</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Assert</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">AreEqual</span><span class="token punctuation" style="color:#393A34">(</span><span class="token named-parameter punctuation" style="color:#393A34">expected</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">6</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token named-parameter punctuation" style="color:#393A34">actual</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> result</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier dans le presse-papier" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Le test √©choue parce que je n'ai pas encore cr√©√© la classe <code>StringCalculator</code>. Prochaine √©tape!</p><div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">src/StringCalculator.cs</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">StringCalculator</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token return-type class-name keyword" style="color:#00009f">int</span><span class="token plain"> Length </span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name keyword" style="color:#00009f">string</span><span class="token plain"> str</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">6</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier dans le presse-papier" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Ici, nous sommes donc √† l'√©tape verte. On doit donc passer √† l'√©tape bleue.</p><p>üîπ J'ajouterais que ton code est super moche vu que tu as <em>hardcod√©</em> la valeur. Mais c'est bien! C'est le but!</p><p>üî∏ La plus longue: r√©aliser un refactoring du code qui nous permet de r√©pondre au besoin demand√© (calculer la longueur d'une cha√Æne de caract√®res) tout en ne cassant pas le test:</p><div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">src/StringCalculator.cs</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">StringCalculator</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token return-type class-name keyword" style="color:#00009f">int</span><span class="token plain"> Length </span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name keyword" style="color:#00009f">string</span><span class="token plain"> str</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> str</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Length</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// la mani√®re la plus propre de renvoyer la longueur d'une cha√Æne de caract√®res en C#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier dans le presse-papier" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Et voil√†! Nous pouvons commencer l'√©criture d'un nouveau test unitaire.</p><p>üîπ C'est un exemple assez simple mais tu y es. Il faut bien noter qu'il y a tout de m√™me des r√®gles √† respecter avec TDD mais je pourrais en parler pendant des heures alors on va s'arr√™ter ici!</p><p class="anchor anchorWithHideOnScrollNavbar_WYt5" id="what-is-tcr">üî∏ D'accord! D'ailleurs, j'ai ou√Øe dire que t'as r√©cemment appris le<!-- --> <span style="font-style:italic">Test &amp;&amp; Commit || Revert</span> <!-- -->(TCR). Tu sais expliquer en quoi √ßa consiste?<a href="#what-is-tcr" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></p><p>üîπ Exact, j'ai eu la chance de prendre connaissance de cette pratique via un <em>workshop</em>. Pour sch√©matiser, disons que c'est une vision extr√™me de TDD. Le meilleur moyen de l'utiliser est avec un script s√©par√©.
Ce script va analyser ta solution √† chaque sauvegarde et va ensuite ex√©cuter tous tes tests. Si tous tes tests sont vert, il cr√©e un commit qui repr√©sente un √©tat stable de ta branche (Test <!-- -->&amp;<!-- -->&amp;<!-- --> Commit).
Si tu as un seul test qui ne passe plus, il fait un rollback pour revenir √† l'√©tat du dernier commit (Revert), qui lui est stable.
Cela te force √† avancer en <em>baby steps</em> et une chose est mise en √©vidence: c'est ton dernier changement qui a cass√© quelque chose.</p><p>Au d√©but, tu passes par une phase de frustration parce que tu peux perdre du code mais justement, cela t'incite √† avancer petit √† petit pour limiter tes pertes. Plus tes <em>steps</em> sont petites, moins tu risques de perdre du code. C'est un super enseignement en compl√©ment de TDD.
Losque tu deviens relativement √† l'aise avec tout √ßa, tu remarques que tu avances de plus en plus vite et surtout, tu as toujours une branche qui fonctionne.</p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="conclusion">Conclusion<a href="#conclusion" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h2><p>üî∏ Un dernier mot pour cl√¥turer cette interview?</p><p>üîπ "Victoriae mundis et mundis lacrima", ca ne veut absolument rien dire mais je trouve que c'est assez dans le ton.
Plus s√©rieusement, √ßa fait d√©j√† un moment qu'on discute mais on a seulement gratt√© la surface. Il reste beaucoup de points √† aborder sur le testing. Je conseillerais donc vivement aux lecteurs d'√™tre curieux sur le sujet, de lire et surtout de pratiquer. N'h√©sitez pas √† demander de l'aide autour de vous.
Et sinon, le testing, √ßa vous tente?</p><figure><img src="https://hunteroi.github.io/tinaeldevresse.eu/fr/img/developers-deliver-working-solutions.jpg" alt="Developers deliver working solutions, not testable code" type="image" style="width:50%;border:.1em grey solid"><figcaption class="legend_Ecw3"></figcaption></figure><div class="formContainer_ssZr"><h3>Reste √† jour, inscris-toi √† ma newsletter!</h3><div class="inputContainer_rIzC"><input type="email" class="input_xw7i" placeholder="Entre ton adresse email" required="" autocomplete="email"><a class="submit_jbGj tooltip" rel="noopener" type="submit"><svg aria-hidden="true" focusable="false" data-prefix="far" data-icon="paper-plane" class="svg-inline--fa fa-paper-plane fa-w-16" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path fill="currentColor" d="M440 6.5L24 246.4c-34.4 19.9-31.1 70.8 5.7 85.9L144 379.6V464c0 46.4 59.2 65.5 86.6 28.6l43.8-59.1 111.9 46.2c5.9 2.4 12.1 3.6 18.3 3.6 8.2 0 16.3-2.1 23.6-6.2 12.8-7.2 21.6-20 23.9-34.5l59.4-387.2c6.1-40.1-36.9-68.8-71.5-48.9zM192 464v-64.6l36.6 15.1L192 464zm212.6-28.7l-153.8-63.5L391 169.5c10.7-15.5-9.5-33.5-23.7-21.2L155.8 332.6 48 288 464 48l-59.4 387.3z"></path></svg><span class="tooltipText">Submit!</span></a></div></div>]]></content:encoded>
            <category>test</category>
            <category>test unitaire</category>
            <category>programmation</category>
        </item>
        <item>
            <title><![CDATA[Qu'est-ce qu'un conteneur?]]></title>
            <link>https://hunteroi.github.io/tinaeldevresse.eu/fr/blog/what-is-a-container</link>
            <guid>https://hunteroi.github.io/tinaeldevresse.eu/fr/blog/what-is-a-container</guid>
            <pubDate>Tue, 01 Jun 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[Salut tout le monde! Aujourd'hui, on va parler de deux choses&#58; 1. la derni√®re mise √† jour de la librairie Docusaurus qui me permet d√©sormais d..]]></description>
            <content:encoded><![CDATA[<a href="/tinaeldevresse.eu/fr/blog/what-is-a-container"><figure><img src="https://hunteroi.github.io/tinaeldevresse.eu/fr/img/what-is-a-container.jpg" alt="What is a Container" type="image"><figcaption class="legend_Ecw3"></figcaption></figure></a><p>Salut! Aujourd'hui, on va parler de deux choses:</p><ol><li>la derni√®re mise √† jour de la librairie Docusaurus qui me permet d√©sormais de te fournir mon blog en deux langues!</li><li>les conteneurs et leur utilit√© dans le cadre du d√©veloppement d'applications.</li></ol><hr><div class="center"><span class="italic">Un simple petit rappel: les opinions exprim√©es ici sont strictement les miennes. Elles ne repr√©sentent pas les opinions ou vues de mon employeur actuel ni aucun des pr√©c√©dents.</span></div><hr><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="docusaurus">Docusaurus<a href="#docusaurus" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h2><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="quest-ce-que-cest">Qu'est-ce que c'est?<a href="#quest-ce-que-cest" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h3><p><a href="https://docusaurus.io" target="_blank" rel="noopener noreferrer">Docusaurus</a>, c'est un g√©n√©rateur de sites web optimis√©s open-source qui embarque plusieurs fonctionnalit√©s int√©ressantes pour les cr√©ateurs de contenu en ligne:</p><ul><li>documentation et articles de blog en <a href="https://www.markdownguide.org/getting-started/" target="_blank" rel="noopener noreferrer">Markdown</a> ;</li><li>multi-linguisme ;</li><li>versionage ;</li><li>recherche de contenu fortement d√©velopp√©e (gr√¢ce √† une int√©gration d'<a href="https://www.algolia.com/" target="_blank" rel="noopener noreferrer">Algolia</a>).</li></ul><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="pourquoi-docusaurus">Pourquoi Docusaurus?<a href="#pourquoi-docusaurus" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h3><p>En effet, la question peut se poser. Pourquoi Docusaurus alors qu'il existe d'autres g√©n√©rateurs de sites comme Wix, Shopify, Weebly, ... ou plus ax√©s d√©veloppeur comme Next.js, Hugo, Gatsby, etc.</p><p>Je suis tomb√© sur Docusaurus par pur hasard en cherchant un g√©n√©rateur de documentations sp√©cifique √† .NET (<a href="https://dotnet.github.io/docfx/" target="_blank" rel="noopener noreferrer">Docfx</a> d'ailleurs, si √ßa t'int√©resse).
Cependant, j'ai personnellement choisi Docusaurus pour mes projets personnels pour 3 raisons: il est...</p><ul><li><a href="https://github.com/facebook/docusaurus" target="_blank" rel="noopener noreferrer">open-source</a> (ce qui signifie que je peux y contribuer, consulter son code source, etc.),</li><li>d√©velopp√© en React (j'aime beaucoup de cette librairie),</li><li>facilement utilisable (en 2-3 minutes, tu peux avoir un site fonctionnel et personnalis√©).</li></ul><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="ce-site-web-est-g√©n√©r√©-avec-docusaurus">Ce site web est g√©n√©r√© avec Docusaurus<a href="#ce-site-web-est-g√©n√©r√©-avec-docusaurus" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h3><p>Si tu ne l'as pas encore remarqu√©, ce site web est g√©n√©r√© avec Docusaurus. Tu peux d'ailleurs retrouver les sources sur <a href="https://github.com/hunteroi/tinaeldevresse.eu" target="_blank" rel="noopener noreferrer">Github</a>.
Si tu vois une faute, n'h√©sitez pas √† le mentionner en ouvrant une issue!</p><p>Passons au sujet principal maintenant! Notre introduction aux conteneurs (ou <em>containers</em> en anglais).</p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="les-conteneurs">Les conteneurs<a href="#les-conteneurs" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h2><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="de-quoi-parle-t-on">De quoi parle-t-on?<a href="#de-quoi-parle-t-on" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h3><p>Un des probl√®mes dans le d√©veloppement, c'est qu'on est fortement li√©s √† la machine sur laquelle tourne notre produit.
Que cela soit en plein d√©veloppement, ou quand il s'agit de distribuer un service web √† des clients, il y a toujours une machine quelque part.
Et le soucis principal, c'est que les syst√®mes et leurs configurations diff√®rent..!</p><figure><img src="https://hunteroi.github.io/tinaeldevresse.eu/fr/img/it-works-on-my-machine.jpg" alt="It Works On My Machine - meme" type="image"><figcaption class="legend_Ecw3"></figcaption></figure><p>Tu l'auras compris. Un conteneur, c'est une unit√© logiciel qui embarque du code et toutes ses d√©pendances afin de faire tourner une application d'un environnement √† l'autre de mani√®re rapide et fiable.
C'est comme si, finalement, tu envoyais ton propre ordinateur au client.</p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="quelles-diff√©rences-avec-une-machine-virtuelle">Quelles diff√©rences avec une Machine Virtuelle?<a href="#quelles-diff√©rences-avec-une-machine-virtuelle" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h3><p>Il est vrai que les conteneurs sont souvent compar√©s aux machines virtuelles (en anglais, <em>virtual machine (VM)</em>) en √ßa qu'ils ont tous deux le m√™me but: faire tourner une application dans un environnement embarqu√©.
La grosse diff√©rence entre les 2, c'est qu'un conteneur fait appel au syst√®me d'exploitation (en anglais, <em>operating system (OS)</em>) du serveur h√¥te tandis qu'une VM h√©berge son propre OS.</p><p>En fait, une machine avec Docker install√©e apporte les avantages suivants:</p><ul><li>l√©g√®ret√© et rapidit√©,</li><li>portabilit√© et standardisation, donc multi-plateforme (dans une certaine mesure).</li></ul><p>En r√©alit√©, c'est compr√©hensible. Regardons de plus pr√®s √† ce sch√©ma:</p><figure><img src="https://hunteroi.github.io/tinaeldevresse.eu/fr/img/container_against_VM.png" alt="Container VS Virtual Machine" type="image"><figcaption class="legend_Ecw3"></figcaption></figure><p>Ce sch√©ma est une comparaison d'une machine avec Docker install√© et d'une machine qui instancie et g√®re des VMs.
Gr√¢ce √† mon extraordinaire talent de dessinateur, on peut vite comprendre pourquoi Docker propose l√©g√®ret√© et rapidit√© comme atout: Docker se base sur l'OS install√© et r√©utilise les binaires.
Cela signifie que la machine n'a plus qu'√† charger les conteneurs qui embarquent le code, les variables d'environnement, etc. (donc peu de choses lourdes √† proprement parler).</p><p>A contrario, un syst√®me qui se base sur les VMs poss√®de un hyperviseur, qui va g√©rer les diff√©rentes VMs. Cet hyperviseur se base en effet sur l'OS de la machine h√¥te.
Cependant, chaque VM embarque elle-m√™me son propre OS et ses binaires.</p><p>En conclusion donc, on peut avoir une machine qui fait facilement tourner 500 conteneurs avec un seul OS.
Mais ce ne sera pas la m√™me histoire si on doit faire tourner 500 VMs... M√™me si, en r√©alit√©, il reste complexe de g√©rer de fa√ßon efficiente plusieurs conteneurs en simultan√©.</p><p>Pourtant, la force de Docker peut √©galement se r√©v√©ler une faiblesse : il n'est pas possible de faire tourner un conteneur qui d√©pend de Windows sur une machine Linux (et invers√©ment).</p><p>Un autre probl√®me important qui se pose lors de l'utilisation de Docker est √©videmment la s√©curit√©!
Les conteneurs ont beau √™tre isol√©s... si un seul est compromis, il est fort √† pari√© que l'enti√®ret√© de la machine (et donc tous les autres conteneurs) repr√©sente un risque.</p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="comment-√ßa-fonctionne">Comment √ßa fonctionne?<a href="#comment-√ßa-fonctionne" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h3><p>Je vais poser les bases, histoire qu'on parle avec le langage. On va parler de Docker sp√©cifiquement.
Il se compose de 3 parties distinctes:</p><ol><li>le logiciel, appel√© Docker daemon, est un processus qui g√®re les conteneurs Docker et les objets en r√©sultant (ex: Docker Engine, ...)</li><li>les objets, divis√©s eux-m√™mes en 3 cat√©gories, sont des entit√©s qui permettent de construire une application dans Docker:<ul><li>un <strong>conteneur</strong> est un environnement standardis√© qui contient les applications.</li><li>une <strong>image</strong> est un mod√®le en lecture seule qui permet de g√©n√©rer un conteneur. On peut donc dire que l'instance d'une image est un conteneur.</li><li>un <strong>service</strong> est un syst√®me qui permet d'orchestrer les op√©rations de plusieurs conteneurs g√©r√©s par plusieurs daemons. √áa porte aussi le nom de <em>Swarm</em> (un ensemble de Docker daemons qui communiquent entre eux gr√¢ce √† Docker - ex: Docker Swarm, Kubernetes, ...).</li></ul></li><li>les registres sont des entrep√¥ts pour les images Docker (ex: Docker Hub, Google Cloud Platform, ...)</li></ol><p>Pour cr√©er un conteneur, il faut respecter quelques principes:</p><ul><li>un conteneur ne contient qu'un seul processus ;</li><li>un conteneur est immutable (√ßa signife qu'avec les m√™mes variables d'environnement, le conteneur tournera le <em>m√™me processus</em>) ;</li><li>un conteneur est disposable (√ßa signifie qu'on peut le supprimer, le remplacer, etc. comme on veut).</li></ul><p>Ces 3 principes ne sont que les plus importants selon moi, mais tu trouveras la m√©thodologie compl√®te sur le site <a href="https://12factor.net/" target="_blank" rel="noopener noreferrer">"The Twelve Factors"</a>.</p><p>Une fois une image r√©cup√©r√©e depuis un registre ou construite localement, tu peux cr√©er un conteneur. Je te le montrerais bien, mais comme je ne r√©invente pas la roue, tu trouveras une petite vid√©o qui explique pas mal ces principes-ci!</p><figure><div class="container_KXSz"><iframe type="html" width="560" height="315" src="https://hunteroi.github.iohttps://www.youtube.com/embed/iqqDU2crIEQ" title="YouTube video player of Docker tutorial" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div><figcaption class="legend_Ecw3"></figcaption></figure><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="pourquoi-utiliser-docker-ou-ses-concurrents">Pourquoi utiliser Docker ou ses concurrents?<a href="#pourquoi-utiliser-docker-ou-ses-concurrents" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h3><p>Le principe de conteneurisation am√®ne diff√©rents avantages consid√©rables. En voici une petite liste non-exhaustive:</p><ul><li>embarquement de nouvelles ressources humaines plus rapide et facile ;</li><li>certitude de travailler dans le m√™me environnement que ses coll√®gues (m√™me version des outils notamment) ;</li><li>application du principe "Do Not Reinvent The Wheel" puisqu'un acc√®s aux images open-source est possible ;</li><li>plus grande rapidit√© de compilation et de destruction en comparaison √† une VM ;</li><li>environnement coh√©rent et isolation ;</li><li>grande compatibilit√© (l'OS de la machine de dev importe peu, donc tout le monde peut travailler sur son poste pr√©f√©r√©).</li></ul><p>Conteneuriser ses applications est de plus en plus courant. On peut d'ailleurs trouver une raison √† cette √©volution dans la croissance que subit le mouvement <a href="https://fr.wikipedia.org/wiki/Devops" target="_blank" rel="noopener noreferrer">DevOps</a>.</p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="conclusion">Conclusion<a href="#conclusion" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h2><p>Si tu n'as de cesse d'avoir des probl√®mes de configuration d'environnement, que tu dois toujours attendre au moins 1 semaine pour d√©ployer un test dans un environnement client, que c'est toujours compliqu√© d'embarquer de nouveaux coll√®gues sur un projet... alors consid√®re peut-√™tre l'emploi de conteneurs dans ton quotidien.
Cela dit, je t'avoue que nous n'avons que gratter la surface des possibilit√©s qu'offre Docker. Je te conseille vivement de continuer √† te documenter.</p><p>Et si tu cherches √† g√©n√©rer de la documentation en ligne ou √† √©crire un blog, tu peux aussi essayer Docusaurus! üòÅ</p><div class="formContainer_ssZr"><h3>Reste √† jour, inscris-toi √† ma newsletter!</h3><div class="inputContainer_rIzC"><input type="email" class="input_xw7i" placeholder="Entre ton adresse email" required="" autocomplete="email"><a class="submit_jbGj tooltip" rel="noopener" type="submit"><svg aria-hidden="true" focusable="false" data-prefix="far" data-icon="paper-plane" class="svg-inline--fa fa-paper-plane fa-w-16" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path fill="currentColor" d="M440 6.5L24 246.4c-34.4 19.9-31.1 70.8 5.7 85.9L144 379.6V464c0 46.4 59.2 65.5 86.6 28.6l43.8-59.1 111.9 46.2c5.9 2.4 12.1 3.6 18.3 3.6 8.2 0 16.3-2.1 23.6-6.2 12.8-7.2 21.6-20 23.9-34.5l59.4-387.2c6.1-40.1-36.9-68.8-71.5-48.9zM192 464v-64.6l36.6 15.1L192 464zm212.6-28.7l-153.8-63.5L391 169.5c10.7-15.5-9.5-33.5-23.7-21.2L155.8 332.6 48 288 464 48l-59.4 387.3z"></path></svg><span class="tooltipText">Submit!</span></a></div></div>]]></content:encoded>
            <category>conteneur</category>
            <category>docker</category>
            <category>docusaurus</category>
            <category>i18n</category>
        </item>
        <item>
            <title><![CDATA[Environnements de d√©ploiement]]></title>
            <link>https://hunteroi.github.io/tinaeldevresse.eu/fr/blog/deployment-environments</link>
            <guid>https://hunteroi.github.io/tinaeldevresse.eu/fr/blog/deployment-environments</guid>
            <pubDate>Fri, 01 Jan 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[Aux √©tudes, les professeurs se focalisent souvent sur les langages, l'algorithmique et le "code propre". Les environnements de d√©ploiement, c'est une des choses que les √©tudiants IT n''apprennent pas durant leurs √©tudes. √Ä mon avi...]]></description>
            <content:encoded><![CDATA[<a href="/tinaeldevresse.eu/fr/blog/deployment-environments"><figure><img src="https://hunteroi.github.io/tinaeldevresse.eu/fr/img/deployment-environments.png" alt="Deployment Environments" type="image"><figcaption class="legend_Ecw3"></figcaption></figure></a><p>Aux √©tudes, les professeurs se focalisent souvent sur les langages, l'algorithmique et le "code propre". Les environnements de d√©ploiement, c'est une des choses que les √©tudiants IT n'apprennent pas durant leurs √©tudes.
√Ä mon avis, c'est une connaissance importante √† poss√©der quand on commence √† travailler pour de plus grosses entreprises comme elles tendent √† ajouter plusieurs couches √† leur pipeline.</p><hr><div class="center"><span class="italic">Un simple petit rappel: les opinions exprim√©es ici sont strictement les miennes. Elles ne repr√©sentent pas les opinions ou vues de mon employeur actuel ni aucun des pr√©c√©dents.</span></div><hr><p>Cet article est plus pr√©cis et cible un certain type de personnes. J'esp√®re que tu le trouveras int√©ressant! J'ai h√¢te de lire ton opinion sur les r√©seaux sociaux.</p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="quest-ce-quun-environnement-de-d√©ploiement">Qu'est-ce qu'un environnement de d√©ploiement?<a href="#quest-ce-quun-environnement-de-d√©ploiement" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h2><p>Si tu es ici, c'est probablement parce que tu te demandes ce qu'est un environnement de d√©ploiement (√† ne pas confondre avec un environnement de d√©veloppement qui est un sujet totalement diff√©rent).
<strong>Un environnement dans le monde du d√©ploiement d'application est "un syst√®me informatique dans lequel un programme ou un composant applicatif est d√©ploy√© et ex√©cut√©".</strong>
C'est d'ailleurs pas moi qui le dis, mais bien <a href="https://fr.wikipedia.org/wiki/Environnement_(informatique)" target="_blank" rel="noopener noreferrer">Wikip√©dia</a>. Et cette d√©finition est plut√¥t pas mal, je dois dire.</p><p>Comme les syst√®mes applicatifs, les processus de d√©veloppement et les ressources informatiques tendent √† √™tre plus distribu√©s, ils deviennent √©galement beaucoup plus complexes et sp√©cialis√©s.
Quand tu travailles sur un projet, tu vas typiquement √† travers un <em>cycle</em> de d√©veloppement, de testing et de release ; cycle qui √©volue souvent sur diff√©rentes plateformes avec des ressources diff√©rentes et une complexit√© croissante.
C'est ce qu'on appelle le "release management". Ce processus permet de d√©ployer, testing et de faire marche arri√®re si n√©cessaire (c'est-√†-dire "retirer une version nouvellement d√©ploy√©e").</p><p>Pour la compr√©hension du reste de la publication, je vais bri√®vement expliquer les diff√©rentes √©tapes du d√©veloppement qu'une application traverse. Permets-moi donc de te pr√©senter les √©tapes communes:</p><ol><li>Analyse le probl√®me et r√©fl√©chis √† une solution num√©rique.</li><li>[Pas mal de trucs de marketing impliquant de la validation, des √©tudes de march√©, etc.]</li><li>Design l'application.</li><li>Impl√©mente-la (d√©veloppement des fonctionnalit√©s qui r√®glent le probl√®me/ajoutent de la valeur √† un produit existant).</li><li>Teste ton impl√©mentation.</li><li><strong>D√©ploie-la</strong> (l'article d'aujourd'hui pointe particuli√®rement cette √©tape).</li><li>Maintiens-la/corrige ses bugs.</li></ol><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="pourquoi-d√©ployer-peut-√™tre-difficile">Pourquoi d√©ployer peut √™tre difficile?<a href="#pourquoi-d√©ployer-peut-√™tre-difficile" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h2><p>Tu sais, quand on travaille en IT, on r√©p√®te souvent ce cycle des √©tapes 3 √† 7 (plus ou moins).
Ce qui est important √† comprendre, c'est que l'on d√©ploie habituellement des versions diff√©rentes d'une application sur des machines diff√©rentes, √† des √©tapes diff√©rentes du processus de d√©veloppement et en suivant des r√®gles diff√©rentes.
Quand tu commences le d√©veloppement d'une applicaiton, tu connais d√©j√† ton process management (enfin j'esp√®re aha!). Et dans beaucoup de cas, tu vas utiliser la <a href="https://fr.wikipedia.org/wiki/M%C3%A9thode_agile" target="_blank" rel="noopener noreferrer">m√©thodologie Agile</a>.</p><figure><img src="https://hunteroi.github.iohttps://www.marketing91.com/wp-content/uploads/2020/06/Introduction-to-Agile-Methodology.jpg" alt="Processus Agile" type="image"><figcaption class="legend_Ecw3">Fait par<!-- --> <a href="https://www.shutterstock.com/g/Tartila" target="_blank" rel="noopener noreferrer">Tartila</a></figcaption></figure><p>J'aimerais mettre une remarque sur le fait que le cycle en cache un autre quand tu es dans le m√©tier: tu dois d√©placer diff√©rentes versions d'une application d'environnements en environnements. Mais un environnement, c'est pas juste une machine sur laquelle ton application tourne! √áa signifie souvent aussi des donn√©es diff√©rentes, des limites diff√©rentes, des buts diff√©rents, des processus diff√©rents, et plein d'autres trucs avec l'adjectif "diff√©rent".
En gros, pendant que ton application mature √† une certaine √©tape (appellons √ßa la version la plus jeune), tu as d'autres versions plus anciennes qui doivent bouger. Si ton entreprise n'a pas de sysadmins ou que tu travailles avec le Cloud, le d√©veloppeur doit g√©rer les d√©ploiements et les possibles rollbacks (sans oublier de rappeler qu'on ne fait pas juste que d√©placer l'app).</p><figure><img src="https://hunteroi.github.io/tinaeldevresse.eu/fr/img/small-fix.jpg" alt="Ne d√©ploie jamais un vendredi" type="image"><figcaption class="legend_Ecw3"></figcaption></figure><p>M√™me si je sais que tu peux maintenant comprendre √¥ combien √ßa peut devenir complexe, je me permets de mentionner qu'il existe des outils d'automation pour faciliter notre travail (et Dieu merci!).</p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="les-diff√©rentes-types-denvironnement">Les diff√©rentes types d'environnement<a href="#les-diff√©rentes-types-denvironnement" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h2><p>Chaque organisation a sa propre mani√®re de s'arranger sur ce sujet, et habituellement c'est m√™me pr√©cis√© par projet car tous les logiciels ne se basent pas sur les m√™mes besoins.</p><p>Voici les quelques environnements standards que tu pourrais rencontrer:</p><table><thead><tr><th>Nom</th><th>Utilit√© par</th><th>Donn√©es</th></tr></thead><tbody><tr><td>Local</td><td>Toi</td><td>Pas de donn√©es client</td></tr><tr><td><strong>D√©v</strong>eloppement</td><td>D√©veloppeurs</td><td>Pas de donn√©es client</td></tr><tr><td><strong>Test</strong>ing</td><td>Ing√©nieurs QA</td><td>Pas de donn√©es client</td></tr><tr><td><strong>Staging</strong></td><td>Ing√©nieurs QA et/ou clients</td><td>Donn√©es de production limit√©es</td></tr><tr><td><strong>Prod</strong>uction</td><td>Utilisateurs finaux</td><td>Toutes les donn√©es de production</td></tr></tbody></table><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="lenvironnement-local">L'environnement local<a href="#lenvironnement-local" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h3><p>C'est <em>ton ordinateur</em>. Le premier endroit o√π tout le travail est r√©alis√©. Il est √©videmment cass√© 80% du temps.</p><h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="objectifs">Objectifs<a href="#objectifs" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h4><ul><li>Travailler sur tes propres t√¢ches</li><li>Voir le r√©sultat et faire ton petit bonhomme de chemin</li><li>Lancer une premi√®re batterie de tests avant d'envoyer ton code √† tes coll√®gues</li></ul><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="lenvironnement-de-d√©veloppement">L'environnement de d√©veloppement<a href="#lenvironnement-de-d√©veloppement" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h3><p>C'est l'endroit o√π tout le travail des d√©veloppeurs repose. C'est acceptable qu'il soit cass√© de temps √† autre (bien que tu devrais l'√©viter si tu ne veux pas recevoir des plaintes de tes coll√®gues √† propos de "dev qui est cass√©").
Personne mis √† part l'√©quipe de d√©veloppement du produit ne devrait jamais avoir acc√®s √† cet environnement.</p><h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="objectifs-1">Objectifs<a href="#objectifs-1" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h4><ul><li>Lancer et tester avec des donn√©es de d√©veloppement</li><li>V√©rifier que ton code fonctionne bien avec celui des autres</li></ul><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="lenvironnement-de-test">L'environnement de test<a href="#lenvironnement-de-test" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h3><p>Aussi appel√© QA (pour "Quality Assurance"), c'est l'endroit o√π tout le reste de l'entreprise entre en jeu. C'est th√©oriquement l'environnement qui pr√©c√®de le d√©ploiement de nouvelles fonctionnalit√©s √† de vrais utilisateurs finaux.</p><h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="objectifs-2">Objectifs<a href="#objectifs-2" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h4><ul><li>V√©rifier qu'il n'y a aucun probl√®me qui aurait pass√© les tests manuels et automatiques pr√©c√©dents</li><li>Prouver que des crit√®res sp√©cifiques sont remplis (en g√©n√©ral, valider le c√¥t√© technique d'une feature)</li></ul><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="lenvironnement-de-staging">L'environnement de staging<a href="#lenvironnement-de-staging" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h3><p>Cet environnement a plusieurs noms. Les gens l'appellent "pr√©-prod" ou m√™me "User Acceptance Testing" (UAT).
C'est en r√©alit√© un environnement qui a pour but de simuler l'environnement de production de plusieurs mani√®res. Il peut √™tre utilis√© pour faire des d√©mos de nouvelles fonctionnalit√©s, demander des retours de la part d'utilisateurs tri√©s sur le volet pour valider le flux business de bout en bout, ou pour habituer les clients √† de nouveaux changements.</p><h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="objectifs-3">Objectifs<a href="#objectifs-3" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h4><ul><li>Emp√™cher de d√©ployer des bugs en production</li><li>Valider le flux commercial int√©gral</li><li>Entrainer les clients por de nouveaux changements</li></ul><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="lenvironnement-de-production">L'environnement de production<a href="#lenvironnement-de-production" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h3><p>C'est un environnement sacr√© qui ne devrait jamais casser. Les utilisateurs finaux l'utilisent. Si tu le casses, tu perds de l'argent, ok?</p><h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="objectifs-4">Objectifs<a href="#objectifs-4" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h4><ul><li>√ätre le dernier d√©positaire de tous les autres environnements</li><li>Donner aux clients la solution √† leur(s) probl√®me(s) sur un certain sujet</li><li>√ätre fiable, "bug-free", toujours op√©rationnel</li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="comment-choisir-sa-pipeline">Comment choisir sa pipeline?<a href="#comment-choisir-sa-pipeline" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h2><p>Tu ne peux pas choisir al√©atoirement entre des pipelines grav√©es dans la pierre qui r√©pondront √† tes besoins. Les pipelines sont sp√©cifiques construire pour r√©pondre aux besoins <strong>d'un projet sp√©cifique</strong>.
J'ai vu pas mal de choses ici et l√†, et il y a beaucoup de compagnies d'h√©bergement comme Heroku qui offrent d'aider √† la mise en place de pipelines de d√©ploiement.</p><p>L'image suivante sch√©matise quelques pipelines dont j'ai entendu parler, avec lesquelles j'ai pu travailler ou que j'utilise m√™me actuellement. Disons qu'elles sont les pipelines par d√©faut des entreprises A, B &amp; C.</p><figure><img src="https://hunteroi.github.io/tinaeldevresse.eu/fr/img/deployment-environments.svg" alt="Deployment Environments" type="img"><figcaption class="legend_Ecw3">Sch√©ma des pipelines de d√©ploiement des compagnies A, B &amp; C</figcaption></figure><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="compagnie-a">Compagnie A<a href="#compagnie-a" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h3><p>Cette entreprise utilise un design bien connu appel√© l'approche DTAP (Development - Testing - Acceptance - Production).
C'est la pipeline la plus standard qui soit. Elle est souvent utilis√©e (pas comme telle mais largement modifi√©e) dans les grandes entreprises.</p><p>Cependant, le sch√©ma de cette entreprise a quelques particularit√©s que je souhaite mentionner: le nombre d'instances dans chaque environnement.
L'image montre que tu peux choisir d'avoir une instance unique de ton application ou plusieurs d'entre elle tournant √† une √©tape particuli√®re de ton process.</p><p>√âvidemment, choisir entre plusieurs instances qui tournent en m√™me temps co√ªte plus cher et apportent autant son lot d'avantages que d'inconv√©nients:</p><ul><li>Tu peux d√©ployer une fonctionnalit√©s sp√©cifique dans une instance sp√©cifique.</li><li>√áa permet √† l'√©quipe de d√©veloppement de travailler en plus petits groupes (ex: √©quipe 1 travaille sur liste 1 de fonctionnalit√©s dans l'instance 1 ; √©quipe 2 liste 2 dans instance 2; ...).</li><li>C'est sympa de voir que ton instance tourne tranquillement alors que celle des autres est cass√©e parce qu'ils se sont embrouill√©s (bien qu'il ne faut pas prendre la grosse t√™te, √ßa t'arrivera aussi!).</li></ul><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="compagnie-b--compagnie-c">Compagnie B &amp; Compagnie C<a href="#compagnie-b--compagnie-c" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h3><p>Ces entreprises se sont d√©barass√© de l'environnement de test. √áa arrive souvent quand tu peux te permettre de tester tes fonctions dans l'environnement de d√©veloppement ou dans l'environnement de staging. C'est aussi une possibilit√© pour les petites √©quipes (moins de d√©ploiements √† effectuer, en somme).</p><p>La seule diff√©rence entre les 2 entreprises est le nombre d'instances √† chaque √©tape du processus. Quand tu construis un petit projet, tu utilises habituellement une pipeline identique √† celle de la compagnie C car il y a moins d'√©tapes pour d√©ployer et aller d'un environnement √† l'autre.</p><p>Personnellement, j'aime le sch√©ma C mais je le simplifierai mais encore un peu plus. Par exemple, je travaille sur un bot Discord (<a href="https://discord.com" target="_blank" rel="noopener noreferrer">si tu ne sais pas ce qu'est Discord, clique-ici</a>), j'utilise:</p><ul><li>mon environnement local qui tourne et qui se connecte √† des ressources du Cloud (base de donn√©es, service web de Discord, autres services web),</li><li>l'environnement dev/staging (un seul environnement ici!) d√©ploie et tourne la version "beta" du bot, et</li><li>l'environnement de production h√©berge la version finale disponible pour les utilisateurs Discord.</li></ul><p>Je ne peux pas te donner une approche sacr√©e magique du d√©ploiement qui fonctionnera parfaitement pour tous tes projets car √ßa n'existe pas.
Tu dois cr√©er ton propre plan personnalis√©. Mais ces sch√©mas "par d√©faut" servent au moins de guide pour toi!</p><p><strong>Et vous les gens, quelle est votre pipeline de d√©ploiement favorite?</strong></p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="conclusion">Conclusion<a href="#conclusion" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h2><p>Les environnements de d√©ploiement sont une grosse histoire et cet article a pour but de gentiment entrouvrir la partie vers ce monde.
Comme le mouvement "DevOps" devient de plus en plus intriguant aux yeux des organisations, c'est toujours un plus de savoir des choses concernant cela.</p><p>J'esp√®re que j'ai r√©ussi √† √©veiller votre curiosit√© et que vous vous avancez sur ces chemins. D'ici l√†, on se voit plus tard!</p><div class="formContainer_ssZr"><h3>Reste √† jour, inscris-toi √† ma newsletter!</h3><div class="inputContainer_rIzC"><input type="email" class="input_xw7i" placeholder="Entre ton adresse email" required="" autocomplete="email"><a class="submit_jbGj tooltip" rel="noopener" type="submit"><svg aria-hidden="true" focusable="false" data-prefix="far" data-icon="paper-plane" class="svg-inline--fa fa-paper-plane fa-w-16" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path fill="currentColor" d="M440 6.5L24 246.4c-34.4 19.9-31.1 70.8 5.7 85.9L144 379.6V464c0 46.4 59.2 65.5 86.6 28.6l43.8-59.1 111.9 46.2c5.9 2.4 12.1 3.6 18.3 3.6 8.2 0 16.3-2.1 23.6-6.2 12.8-7.2 21.6-20 23.9-34.5l59.4-387.2c6.1-40.1-36.9-68.8-71.5-48.9zM192 464v-64.6l36.6 15.1L192 464zm212.6-28.7l-153.8-63.5L391 169.5c10.7-15.5-9.5-33.5-23.7-21.2L155.8 332.6 48 288 464 48l-59.4 387.3z"></path></svg><span class="tooltipText">Submit!</span></a></div></div>]]></content:encoded>
            <category>d√©ployement</category>
            <category>environnement</category>
            <category>environnement d'application</category>
            <category>environnement de pipeline</category>
            <category>CI/CD</category>
        </item>
        <item>
            <title><![CDATA[Qu'est-ce qui fait un bon d√©veloppeur?]]></title>
            <link>https://hunteroi.github.io/tinaeldevresse.eu/fr/blog/what-makes-a-good-developer</link>
            <guid>https://hunteroi.github.io/tinaeldevresse.eu/fr/blog/what-makes-a-good-developer</guid>
            <pubDate>Mon, 01 Jun 2020 00:00:00 GMT</pubDate>
            <description><![CDATA[Hey! Bienvenue sur mon nouveau site web. Pour commencer, j'aimerais t'introduire √† des points cl√©s que je trouve important pour un d√©velop...]]></description>
            <content:encoded><![CDATA[<a href="/tinaeldevresse.eu/fr/blog/what-makes-a-good-developer"></a><figure><a href="/tinaeldevresse.eu/fr/blog/what-makes-a-good-developer"><img src="https://hunteroi.github.io/tinaeldevresse.eu/fr/img/what-makes-a-good-developer.jpg" alt="Qu'est-ce qui fait un bon d√©veloppeur" type="image"></a><figcaption class="legend_Ecw3"><a href="/tinaeldevresse.eu/fr/blog/what-makes-a-good-developer">Photo de<!-- --> </a><a href="https://unsplash.com/@anniespratt" target="_blank" rel="noreferrer noopener nofollow">Annie Spratt</a> <!-- -->sur<!-- --> <a href="https://unsplash.com/photos/QckxruozjRg" target="_blank" rel="noreferrer noopener nofollow">Unsplash</a></figcaption></figure><p>Hey! Bienvenue sur mon nouveau site web. Pour commencer, j'aimerais t'introduire √† des points cl√©s que je trouve important pour un d√©veloppeur dans son travail quotidien!</p><hr><div class="center"><span class="italic">Un simple petit rappel: les opinions exprim√©es ici sont strictement les miennes. Elles ne repr√©sentent pas les opinions ou vues de mon employeur actuel ni aucun des pr√©c√©dents.</span></div><hr><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="1-r√©fl√©chis-avant-d√©crire">1. R√©fl√©chis avant d'√©crire<a href="#1-r√©fl√©chis-avant-d√©crire" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h2><p>Je vois parfois de jeunes d√©veloppeurs directement se lancer dans la programmation de leurs applications sans m√™me s'accorder le temps de r√©fl√©chir √† celle-ci. Bien s√ªr, c'est une m√©thodologie qui va fonctionner pour de petits programmes faciles apr√®s peu de fonctionnalit√©s. Mais aussit√¥t l'application en question beaucoup plus compl√®te et n√©cessitant plusieurs couches complexes, cela devient obligatoire de tirer une chaise, s'asseoir et prendre le temps d'√©crire des notes, d'analyser, de dessiner des sch√©mas et de r√©aliser des recherches avant de programmer quoique ce soit.</p><figure><div class="container_KXSz"><iframe id="1" src="https://hunteroi.github.iohttps://giphy.com/embed/Ph6mVLp87pCVCkHOBQ" type="html" width="100%" height="100%" title="Looking Logan Lerman GIF By Hunters" style="position:absolute" allowfullscreen="" frameborder="0" class="giphy-embed"></iframe></div><figcaption class="legend_Ecw3"></figcaption></figure><p>Beaucoup d'applications sont √©trangement inmaintenable d√ª √† une pauvre analyse ou un manque de recherche. Et croyez-moi, j'ai vu de nombreux projets tomber dans tous les coins √† cause de √ßa. <strong>Attention, coll√®gues d√©veloppeurs!</strong> Tu veux toujours r√©aliser le meilleur pour ton travail.</p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="2-communique">2. Communique<a href="#2-communique" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h2><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="21-apprendre-√†-conna√Ætre-son-client">2.1. Apprendre √† conna√Ætre son client<a href="#21-apprendre-√†-conna√Ætre-son-client" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h3><p>Tout ce que tu construis pour ton client doit √™tre le r√©sultat d'un besoin. Pour identifier la meilleure mani√®re de cr√©er le produit qu'<em>ils</em> veulent, tu dois apprendre √† conna√Ætre ton client. Apprends ce qu'ils font, comment ils le font et pose-leur des questions sur comment ils se sentent par rapport √† √ßa. Si tu veux rendre ton client heureux, tu dois d'apprendre savoir ce qui peut le rendre heureux! üòâ</p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="22-discute-avec-ton-√©quipe">2.2. Discute avec ton √©quipe<a href="#22-discute-avec-ton-√©quipe" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h3><p>C'est vrai que tu vas passer une grande partie de temps face √† ton ordinateur. Mais ne sous-estime pas le c√¥t√© social de ton boulot! En tant que d√©veloppeur, collaborer avec son √©quipe est vraiment important.
√Ä qui fais-tu appel quand tu as des probl√®mes? Comment proc√®des-tu quand tu d√©couvres un bug en production? Que fais-tu quand tu veux prendre une pause au travail? Chaque entreprise a son propre moyen de r√©pondre √† ces situations.
Parler avec tes coll√®gues t'ouvre √† mieux conna√Ætre ton entreprise, tes coll√®gues et le contexte dans lequel tu travailles.</p><p>Cela rend aussi le d√©veloppement d'un projet plus facile pour tout le monde. Quand tu parles avec tes coll√®gues, tu garantis que vous ne vous marchez pas sur les pieds en bossant sur une m√™me fonctionnalit√© ou en faisant quelque chose qui a d√©j√† √©t√© r√©alis√© auparavant.
Puis, c'est une bonne chose de parler avec les autres si tu as des points bloquants. Ils pourraient d√©j√† avoir v√©cu √ßa et leur exp√©rience est un tr√®s grand atout! √ätre capable de r√©gler les soucis rapidement et de d√©ployer dans le temps allou√© est un point critique dans ta carri√®re de d√©veloppeur. C'est ta responsabilit√© d'√™tre productif, d'estimer pr√©cis√©ment le temps n√©cessaire pour compl√©ter des t√¢ches et de les terminer dans les temps.</p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="3-suis-les-pratiques-√©tablies">3. Suis les pratiques √©tablies<a href="#3-suis-les-pratiques-√©tablies" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h2><p>Ce point est quelque peu li√© au pr√©c√©dent. Plus vite tu identifies les standards et les "best practices" utilis√©s au sein de ton entreprise, plus efficace tu seras √† travailler en conformit√© avec ce qui est attendu de toi. Parle avec ton √©quipe, pose des questions, v√©rifie toutes les choses que tu peux et accepte les conventions communes. Ce n'est pas seulement important pour le futur du projet auquel tu es assign√© mais aussi pour ta propre carri√®re et r√©putation.</p><p>Cependant, n'aie pas peur de chercher des moyens pour am√©liorer les proc√©d√©s si tu penses que √ßa peut am√©liorer la productivit√© et l'efficacit√© de tout le monde.</p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="4-sois-fain√©ant">4. Sois fain√©ant<a href="#4-sois-fain√©ant" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h2><p>Le premier principe que tu devrais toujours suivre quand tu bosses, c'est d'√™tre fain√©ant. Attention par contre hein, je te dis pas de rien faire toute la journ√©e!
Je dis juste que tu devrais <strong>te focaliser sur d√©livrer le Minimum Viable Product (MVP) demand√©</strong>. N'impl√©mente pas des choses qui n'ont pas √©t√© demand√©es par le client parce que "√ßa sera utile un jour". C'est une perte de temps. Tu vas plut√¥t terminer avec un code inutilis√© que personne ne voudra retirer parce qu'ils ne conna√Ætront pas son utilit√© et que "si on le retire, toute l'application tourne plus". Berk.</p><figure><img src="https://hunteroi.github.iohttps://i.imgur.com/qbDVKh7.png" alt="y a pas besoin de r√©inventer la roue - meme" type="image"><figcaption class="legend_Ecw3"></figcaption></figure><p><code>Ne r√©invente pas la roue</code> est un bel exemple d'√™tre fain√©ant. N'utilise pas ton temps √† construire quelque chose que d'autres font bien mieux que toi. Utilise leur travail! Si tu as besoin de changer quelques petits trucs, tu peux toujours y revenir plus tard.</p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="5-√©cris-du-code">5. √âcris du code<a href="#5-√©cris-du-code" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h2><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="51-√©cris-du-code-fonctionnel-propre">5.1. √âcris du code fonctionnel propre<a href="#51-√©cris-du-code-fonctionnel-propre" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h3><p>√áa peut sembler b√™te mais tu es pay√© pour <strong>faire marcher des choses</strong>. Donc ne lance pas des instructions dans un fichier en esp√©rant que √ßa marche correctement. Le plus t√¥t tu fais de bonnes choses, le meilleur ton application sera.
Navdeep Singh a √©crit une histoire sur <a href="https://medium.com/better-programming/good-code-vs-bad-code-35624b4e91bc" target="_blank" rel="noopener noreferrer" title="Good Code vs Bad Code">pourquoi √©crire du bon code est important, et comment le faire</a>. Lis-le. C'est en anglais et c'est super int√©ressant!</p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="52-√©cris-du-code-facilement-maintenable-et-am√©liorable">5.2. √âcris du code facilement maintenable et am√©liorable<a href="#52-√©cris-du-code-facilement-maintenable-et-am√©liorable" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h3><p>C'est sympa d'avoir du code fonctionnel et qui fait ce qu'on attend de lui.
Cependant, m√™me si ton code est compris par la machine, l'est-il des humains? √Ä un certain moment, il y aura un.e autre qui devra se pencher sur ton code et le modifier. Et √ßa devrait √™tre super facile!</p><p>Pense toujours √† comment ton code est √©vident en l'√©crivant. Les standards de ton entreprise et les meilleures pratiques ne vont pas t'aider √† √©crire du code compr√©hensible. C'est plus ou moins la m√™me situation quand tu expliques ton m√©tier √† quelqu'un qui n'est pas de l'IT: <strong>tu expliques les choses de mani√®re simple</strong>.
Garde en t√™te que tu √©cris en r√©alit√© une partie d'une application qui sera un jour refactor√©e par quelqu'un d'autre. Et tu ne veux √©videmment pas que ces personnes te maudissent et t'appellent par tous les noms quand ils tombent sur ton code.</p><h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="53-teste-ton-code">5.3. Teste ton code<a href="#53-teste-ton-code" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h3><p>Pourquoi tester ton code? C'est vrai qu'il fonctionne super bien mais quand m√™me. Tu ne sais pas de quoi sont capables les utilisateurs finaux...</p><figure><img src="https://hunteroi.github.iohttps://i.imgur.com/mva14iu.jpg" alt="quand tu as l'occasion de voir comment les utilisateurs utilisent ton app - meme" type="image" style="margin:0 auto"><figcaption class="legend_Ecw3"></figcaption></figure><p>Je recommande vivement aux managers de projet d'utiliser la m√©thodologie <a href="https://medium.com/hackernoon/introduction-to-test-driven-development-tdd-61a13bc92d92" target="_blank" rel="noopener noreferrer"><strong>T</strong>est-<strong>D</strong>riven <strong>D</strong>evelopment</a> pour leurs projets.
Le testing dans le monde IT est √† mon humble opinion l'√©tape la plus importante du processus. Et il y a beaucoup de raisons:</p><ul><li><strong>√ßa assure la qualit√© du produit</strong>: √ßa emp√™che d'introduire de b√™tes bugs en production;</li><li><strong>√ßa √©vite de gaspiller du temps et de l'argent</strong>: tu peux construire des choses dont tu es s√ªr que les changements (ex: optimisation) ne casseront pas la fonctionnalit√© X alors que tu travaillais sur la fonctionnalit√© Y</li><li><strong>√ßa aide √† s√©curiser l'app</strong>: √ßa assure qu'il y a aussi peu de br√®ches que possible (on sait tous que le "risque z√©ro" est un mythe).</li></ul><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="6-vois-les-choses-dans-les-yeux-de-lutilisateur">6. Vois les choses dans les yeux de l'utilisateur<a href="#6-vois-les-choses-dans-les-yeux-de-lutilisateur" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h2><p>L'empathie est r√©ellement un bonus pour les devs. Te mettre √† la place du client te permet de cr√©er des apps facile √† comprendre et utiliser.</p><p>Parle avec les UX designers si tu ressens que l'application est trop compliqu√©e quand son seul but est de boire une tasse de caf√©...</p><figure><img src="https://hunteroi.github.iohttps://i.redd.it/fb6xxzrrtfr21.png" alt="UI vs UX - meme" type="image"><figcaption class="legend_Ecw3">De<!-- --> <a href="https://www.reddit.com/r/UI_Design/comments/bblxum/ui_vs_ux/" target="_blank" rel="noreferrer noopener nofollow">r/UI_Design</a></figcaption></figure><p>C'est aussi une bonne chose d'avoir des testeurs dans ton √©quipe qui vont agir comme des utilisateurs finaux et v√©rifier que rien ne semble bizarre, ne produise de probl√®me, ne soit surcompliqu√©, etc.
Ils jouent √©videmment un r√¥le important dans le d√©veloppement d'un projet.</p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="7-sois-curieux-et-am√©liore-tes-connaissances-et-comp√©tences">7. Sois curieux et am√©liore tes connaissances et comp√©tences<a href="#7-sois-curieux-et-am√©liore-tes-connaissances-et-comp√©tences" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h2><p>C'est la derni√®re partie de mon article et je voulais partager avec toi le meilleur conseil qu'on m'a un jour donn√©... <strong>Sois curieux √† propos de tout!</strong> Il y a plein de choses autour de toi et chaque jour apporte son lot de nouvelles librairies, protocoles, ... Il n'y a pas assez de temps dans une vie pour tout apprendre mais √ßa ne signifie pas que tu ne devrais pas essayer de rester √† jour.
Voici une liste de choses que je fais personnellement pour rester √† jour sur mes sujets favoris et am√©liorer mes connaissances et comp√©tences:</p><ul><li><p>J'essaye toujours de prendre le travail challengeant et complexe au lieu d'un truc facile que j'ai d√©j√† fait des centaines de fois.</p></li><li><p>Je vais √† des √©v√©nements et je rencontre des gens.
Le DevDay, le DevFM et d'autres nombreux √©v√©nements organis√©s par le <a href="http://www.mic-belgique.be/" target="_blank" rel="noopener noreferrer" title="web site du MIC">MIC Belgique</a>...</p></li><li><p>Je m'implique dans des communaut√©s.
Par exemple, je suis un membre actif de SpaceY!</p></li><li><p>J'essaie d'aider les gens (ex: je bosse sur des projets open-source).</p></li></ul><p>La meilleure chose que tu peux faire est d'√™tre proactif.ve. Sois passionn√© par ton m√©tier comme pour tout ce qui t'apporte de la joie!</p><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="conclusion">Conclusion<a href="#conclusion" class="hash-link" aria-label="Lien direct vers le titre" title="Lien direct vers le titre">‚Äã</a></h2><p>Les d√©veloppeurs ne sont pas une ressource commune. Les bons d√©veloppeurs encore moins. Reste impliqu√© et remets-toi toujours en question. Je suis convaincu que c'est ainsi qu'on apprend.</p><p><strong>Et selon toi, qu'est-ce qui fait de quelqu'un un bon d√©veloppeur?</strong></p><div class="formContainer_ssZr"><h3>Reste √† jour, inscris-toi √† ma newsletter!</h3><div class="inputContainer_rIzC"><input type="email" class="input_xw7i" placeholder="Entre ton adresse email" required="" autocomplete="email"><a class="submit_jbGj tooltip" rel="noopener" type="submit"><svg aria-hidden="true" focusable="false" data-prefix="far" data-icon="paper-plane" class="svg-inline--fa fa-paper-plane fa-w-16" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path fill="currentColor" d="M440 6.5L24 246.4c-34.4 19.9-31.1 70.8 5.7 85.9L144 379.6V464c0 46.4 59.2 65.5 86.6 28.6l43.8-59.1 111.9 46.2c5.9 2.4 12.1 3.6 18.3 3.6 8.2 0 16.3-2.1 23.6-6.2 12.8-7.2 21.6-20 23.9-34.5l59.4-387.2c6.1-40.1-36.9-68.8-71.5-48.9zM192 464v-64.6l36.6 15.1L192 464zm212.6-28.7l-153.8-63.5L391 169.5c10.7-15.5-9.5-33.5-23.7-21.2L155.8 332.6 48 288 464 48l-59.4 387.3z"></path></svg><span class="tooltipText">Submit!</span></a></div></div>]]></content:encoded>
            <category>bonnes pratiques</category>
            <category>carri√®re</category>
            <category>technologie</category>
        </item>
    </channel>
</rss>